name: üìö Deploy Documentation

on:
  push:
    branches: [main, master]
    paths:
      - 'docs/**'
      - '.github/workflows/deploy-docs-to-docusaurus.yml'
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment even if no docs changes'
        required: false
        default: 'false'
        type: boolean

permissions:
  contents: read
  actions: read
  pull-requests: write

jobs:
  check_changes:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check_changes.outputs.should_run }}
    steps:
      - name: üîß Check for changes in docs folder
        id: check_changes
        run: |
          # Always run for manual triggers or force deploy
          if [ "${{ github.event.inputs.force_deploy }}" == "true" ] || [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "Manual trigger or force deploy - will proceed with deployment"
            echo "should_run=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          # For push events, always run (since we have path filters in the workflow trigger)
          echo "Push event detected - will proceed with deployment"
          echo "should_run=true" >> $GITHUB_OUTPUT

  deploy-docs:
    needs: check_changes
    if: needs.check_changes.outputs.should_run == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: üîç Checkout Material Kai Vision Platform
        uses: actions/checkout@v4

      - name: üìã Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: üßπ Create directory structure
        run: |
          mkdir -p docs-temp/docs
          mkdir -p docs-temp/build

      - name: üìö Create simple documentation site
        run: |
          echo "üìö Creating simple documentation site..."

          # Create build directory
          mkdir -p docs-temp/build

          # Create index.html
          cat > docs-temp/build/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Material Kai Vision Platform Documentation</title>
              <style>
                  body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; margin: 0; padding: 20px; background: #f5f5f5; }
                  .container { max-width: 1200px; margin: 0 auto; background: white; padding: 40px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
                  h1 { color: #2c3e50; border-bottom: 3px solid #3498db; padding-bottom: 10px; }
                  h2 { color: #34495e; margin-top: 30px; }
                  .docs-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 20px; margin-top: 30px; }
                  .doc-card { background: #f8f9fa; padding: 20px; border-radius: 6px; border-left: 4px solid #3498db; }
                  .doc-card h3 { margin-top: 0; color: #2c3e50; }
                  .doc-card a { color: #3498db; text-decoration: none; font-weight: 500; }
                  .doc-card a:hover { text-decoration: underline; }
                  .services-section { margin-top: 40px; }
                  .services-grid { display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 15px; margin-top: 20px; }
                  .service-item { background: #e8f4fd; padding: 15px; border-radius: 4px; }
                  .service-item a { color: #2980b9; }
              </style>
          </head>
          <body>
              <div class="container">
                  <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 30px;">
                      <div>
                          <h1 style="margin: 0;">üöÄ Material Kai Vision Platform Documentation</h1>
                          <p style="margin: 10px 0 0 0;">AI-powered material intelligence system with comprehensive documentation and services.</p>
                      </div>
                      <div style="display: flex; gap: 15px;">
                          <a href="https://v1api.materialshub.gr/docs" target="_blank" style="background: #27ae60; color: white; padding: 12px 20px; border-radius: 6px; text-decoration: none; font-weight: 600; box-shadow: 0 2px 4px rgba(0,0,0,0.1); transition: all 0.3s ease;">
                              üì° API Docs
                          </a>
                          <a href="https://v1api.materialshub.gr/redoc" target="_blank" style="background: #e74c3c; color: white; padding: 12px 20px; border-radius: 6px; text-decoration: none; font-weight: 600; box-shadow: 0 2px 4px rgba(0,0,0,0.1); transition: all 0.3s ease;">
                              üìã ReDoc
                          </a>
                      </div>
                  </div>

                  <div class="docs-grid">
                      <div class="doc-card">
                          <h3>üìã Platform Overview</h3>
                          <a href="README.html">Platform README</a><br>
                          <a href="platform-flows.html">Platform Flows</a><br>
                          <a href="platform-functionality.html">Platform Functionality</a>
                      </div>

                      <div class="doc-card">
                          <h3>‚öôÔ∏è Setup & Configuration</h3>
                          <a href="setup-configuration.html">Setup Configuration</a><br>
                          <a href="deployment-guide.html">Deployment Guide</a><br>
                          <a href="troubleshooting.html">Troubleshooting</a>
                      </div>

                      <div class="doc-card">
                          <h3>üì° API & Architecture</h3>
                          <a href="api-documentation.html">API Documentation</a><br>
                          <a href="architecture-services.html">Architecture Services</a><br>
                          <a href="database-schema.html">Database Schema</a>
                      </div>

                      <div class="doc-card">
                          <h3>üîí Security & Auth</h3>
                          <a href="security-authentication.html">Security Authentication</a><br>
                          <a href="admin-panel-guide.html">Admin Panel Guide</a>
                      </div>

                      <div class="doc-card">
                          <h3>ü§ñ AI & ML Services</h3>
                          <a href="ai-ml-services.html">AI/ML Services</a><br>
                          <a href="mivaa-service.html">MIVAA Service</a><br>
                          <a href="services-ai-agents.html">AI Agents</a>
                      </div>

                      <div class="doc-card">
                          <h3>üìÑ Processing & Search</h3>
                          <a href="services-pdf-processing.html">PDF Processing</a><br>
                          <a href="services-search.html">Search Services</a><br>
                          <a href="services-rag-knowledge.html">RAG Knowledge</a>
                      </div>
                  </div>

                  <div class="services-section">
                      <h2>üîß Detailed Services</h2>
                      <div class="services-grid">
                          <div class="service-item"><a href="services/README.html">Services Overview</a></div>
                          <div class="service-item"><a href="services-material-recognition.html">Material Recognition</a></div>
                          <div class="service-item"><a href="services-utility-infrastructure.html">Utility Infrastructure</a></div>
                          <div class="service-item"><a href="complete-service-inventory.html">Complete Service Inventory</a></div>
                          <div class="service-item"><a href="testing-strategy.html">Testing Strategy</a></div>
                          <div class="service-item"><a href="changes-log.html">Changes Log</a></div>
                      </div>
                  </div>
              </div>
          </body>
          </html>
          EOF

          # Convert all markdown files to HTML
          npm install -g marked

          # Process each markdown file
          find docs -name "*.md" | while read file; do
              # Get relative path and convert to HTML filename
              rel_path=${file#docs/}
              html_file="docs-temp/build/${rel_path%.md}.html"

              # Create directory if needed
              mkdir -p "$(dirname "$html_file")"

              # Convert markdown to HTML with basic styling
              cat > "$html_file" << 'HTMLSTART'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Material Kai Vision Platform</title>
              <style>
                  body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; margin: 0; padding: 20px; background: #f5f5f5; line-height: 1.6; }
                  .container { max-width: 900px; margin: 0 auto; background: white; padding: 40px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
                  h1, h2, h3 { color: #2c3e50; }
                  h1 { border-bottom: 3px solid #3498db; padding-bottom: 10px; }
                  code { background: #f1f2f6; padding: 2px 6px; border-radius: 3px; font-family: 'Monaco', 'Consolas', monospace; }
                  pre { background: #f1f2f6; padding: 15px; border-radius: 6px; overflow-x: auto; }
                  a { color: #3498db; text-decoration: none; }
                  a:hover { text-decoration: underline; }
                  .back-link { margin-bottom: 20px; }
                  .back-link a { background: #3498db; color: white; padding: 8px 16px; border-radius: 4px; }
                  table { width: 100%; border-collapse: collapse; margin: 20px 0; }
                  th, td { border: 1px solid #ddd; padding: 12px; text-align: left; }
                  th { background: #f8f9fa; }
              </style>
          </head>
          <body>
              <div class="container">
                  <div class="back-link"><a href="../index.html">‚Üê Back to Documentation Home</a></div>
          HTMLSTART

              # Convert markdown content and append
              marked "$file" >> "$html_file"

              # Close HTML
              echo '</div></body></html>' >> "$html_file"
          done

          # Create a proper README.md for GitHub
          cat > docs-temp/build/README.md << 'EOF'
          # üöÄ Material Kai Vision Platform Documentation

          Welcome to the Material Kai Vision Platform documentation site!

          ## üìñ View Documentation

          **[üìö Browse Full Documentation](https://basilakis.github.io/)**

          ## üîó Quick Links

          - **[üì° API Documentation](https://v1api.materialshub.gr/docs)** - Interactive API documentation
          - **[üìã ReDoc API](https://v1api.materialshub.gr/redoc)** - Alternative API documentation format

          ## üìã Documentation Sections

          ### Core Platform
          - [Platform Overview](https://basilakis.github.io/README.html)
          - [Platform Flows](https://basilakis.github.io/platform-flows.html)
          - [Platform Functionality](https://basilakis.github.io/platform-functionality.html)

          ### Setup & Configuration
          - [Setup Configuration](https://basilakis.github.io/setup-configuration.html)
          - [Deployment Guide](https://basilakis.github.io/deployment-guide.html)
          - [Troubleshooting](https://basilakis.github.io/troubleshooting.html)

          ### API & Architecture
          - [API Documentation](https://basilakis.github.io/api-documentation.html)
          - [Architecture Services](https://basilakis.github.io/architecture-services.html)
          - [Database Schema](https://basilakis.github.io/database-schema.html)

          ### AI & ML Services
          - [AI/ML Services](https://basilakis.github.io/ai-ml-services.html)
          - [MIVAA Service](https://basilakis.github.io/mivaa-service.html)
          - [AI Agents](https://basilakis.github.io/services-ai-agents.html)

          ### Processing & Search
          - [PDF Processing](https://basilakis.github.io/services-pdf-processing.html)
          - [Search Services](https://basilakis.github.io/services-search.html)
          - [RAG Knowledge](https://basilakis.github.io/services-rag-knowledge.html)

          ## üîß Services

          - [Services Overview](https://basilakis.github.io/services/README.html)
          - [Material Recognition](https://basilakis.github.io/services-material-recognition.html)
          - [Utility Infrastructure](https://basilakis.github.io/services-utility-infrastructure.html)
          - [Complete Service Inventory](https://basilakis.github.io/complete-service-inventory.html)

          ## üõ°Ô∏è Security & Testing

          - [Security Authentication](https://basilakis.github.io/security-authentication.html)
          - [Admin Panel Guide](https://basilakis.github.io/admin-panel-guide.html)
          - [Testing Strategy](https://basilakis.github.io/testing-strategy.html)

          ---

          **Material Kai Vision Platform** - AI-powered material intelligence system

          *This documentation is automatically generated and deployed from the main repository.*
          EOF

          echo "‚úÖ Simple documentation site created"

      - name: üîç Checkout target repository
        uses: actions/checkout@v4
        with:
          repository: Basilakis/basilakis.github.io
          token: ${{ secrets.GH_TOKEN }}
          path: target-repo

      - name: üì¶ Install GitHub CLI
        run: |
          echo "Installing GitHub CLI..."
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh

      - name: üöÄ Create Pull Request
        run: |
          # Generate a unique branch name
          BRANCH_NAME="docs-update-$(date +%Y%m%d%H%M%S)"
          echo "Branch name: $BRANCH_NAME"

          # Create a new branch for the changes
          cd target-repo
          git checkout -b $BRANCH_NAME

          # Copy the built files
          echo "Removing existing files..."
          rm -rf * || true

          echo "Copying built documentation site..."
          cp -r ../docs-temp/build/* .

          echo "Contents after copying:"
          ls -la

          # Commit the changes
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          echo "Adding files to git..."
          git add .

          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "‚ÑπÔ∏è No changes to commit - documentation is already up to date"
            exit 0
          fi

          echo "Committing changes..."
          git commit -m "Deploy Documentation: $(date)"

          echo "Pushing branch..."
          git push origin $BRANCH_NAME

          echo "Creating pull request..."

          # Create a pull request using GitHub CLI
          gh auth login --with-token <<< "${{ secrets.GH_TOKEN }}"

          # Try to create PR targeting gh-pages branch (where GitHub Pages serves from)
          if ! gh pr create \
            --title "Deploy Documentation: ${{ github.event.head_commit.message }}" \
            --body "This PR was automatically created by the GitHub Actions workflow to update the documentation site. Changes include updates from the Material Kai Vision Platform repository (commit: ${{ github.sha }})." \
            --repo Basilakis/basilakis.github.io \
            --head $BRANCH_NAME \
            --base gh-pages; then
            echo "‚ùå Failed to create PR automatically"
            echo "üîó Create PR manually at: https://github.com/Basilakis/basilakis.github.io/compare/gh-pages...$BRANCH_NAME"
          else
            echo "‚úÖ Pull request created successfully"
          fi