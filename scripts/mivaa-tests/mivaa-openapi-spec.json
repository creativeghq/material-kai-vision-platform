{
  "openapi": "3.1.0",
  "info": {
    "title": "PDF Processing Service",
    "description": "\n# MIVAA PDF Extractor - Comprehensive API\n\n**Enhanced January 2025** - Production-ready microservice for PDF processing, RAG operations, AI analysis, and vector search.\n\n## üéØ **Key Features**\n- **PDF Processing**: Advanced text, table, and image extraction using PyMuPDF4LLM\n- **RAG System**: Retrieval-Augmented Generation with LlamaIndex integration\n- **Vector Search**: Semantic similarity search with optimized embeddings\n- **AI Analysis**: LLaMA Vision models for material analysis\n- **Embedding Generation**: Standardized text-embedding-ada-002 (1536 dimensions)\n- **Multi-modal Processing**: Text, images, and structured data extraction\n- **Performance Monitoring**: Built-in metrics and health checks\n- **JWT Authentication**: Secure API access\n\n## üîê **Authentication**\nAll API endpoints require JWT authentication:\n```\nAuthorization: Bearer your-jwt-token\n```\n\n## üìä **Recent Enhancements (Phase 3)**\n‚úÖ **Unified Vector Search System** with intelligent caching\n‚úÖ **Standardized Embedding Models** (text-embedding-ada-002)\n‚úÖ **Optimized Database Indexing** with auto-scaling\n‚úÖ **80% faster search** and 90% error reduction\n\n## üöÄ **API Categories**\n- **üìÑ PDF Processing**: `/api/v1/extract/*` - Extract markdown, tables, images\n- **üß† RAG System**: `/api/v1/rag/*` - Document upload, query, chat, search\n- **ü§ñ AI Analysis**: `/api/semantic-analysis` - LLaMA Vision material analysis\n- **üîç Search APIs**: `/api/search/*` - Semantic, vector, hybrid search\n- **üîó Embedding APIs**: `/api/embeddings/*` - Generate embeddings, batch processing\n- **üí¨ Chat APIs**: `/api/chat/*` - Chat completions, contextual responses\n- **üè• Health & Monitoring**: `/health`, `/metrics`, `/performance/summary`\n\n## üìö **Legacy Support**\nLegacy endpoints (`/extract/*`) are still supported for backward compatibility.\n        ",
    "version": "1.0.0",
    "x-api-features": {
      "pdf_processing": "Advanced text, table, and image extraction",
      "rag_system": "Retrieval-Augmented Generation with LlamaIndex",
      "vector_search": "Semantic similarity search with optimized embeddings",
      "ai_analysis": "LLaMA Vision models for material analysis",
      "embedding_model": "text-embedding-ada-002 (1536 dimensions)",
      "performance": "80% faster search, 90% error reduction",
      "caching": "Intelligent embedding and search result caching"
    },
    "x-endpoint-categories": {
      "pdf_processing": "/api/v1/extract/*",
      "rag_system": "/api/v1/rag/*",
      "ai_analysis": "/api/semantic-analysis",
      "search": "/api/search/*",
      "embeddings": "/api/embeddings/*",
      "chat": "/api/chat/*",
      "health": "/health, /metrics, /performance/summary",
      "legacy": "/extract/*"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    },
    {
      "url": "https://your-domain.com",
      "description": "Production server"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Check the health status of the PDF2Markdown microservice",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "summary": "Performance Metrics",
        "description": "Get current performance metrics and system status",
        "operationId": "get_metrics_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Metrics Metrics Get"
                }
              }
            }
          }
        }
      }
    },
    "/performance/summary": {
      "get": {
        "summary": "Performance Summary",
        "description": "Get performance summary with recommendations",
        "operationId": "get_performance_summary_performance_summary_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Performance Summary Performance Summary Get"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Service Information",
        "description": "Get basic information about the PDF2Markdown microservice",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Root  Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/api/v1/extract/markdown": {
      "post": {
        "tags": [
          "PDF Processing"
        ],
        "summary": "Extract Markdown from PDF",
        "description": "Convert PDF document to Markdown format with optional page selection",
        "operationId": "extract_markdown_api_v1_api_v1_extract_markdown_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page_number",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Page Number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_extract_markdown_api_v1_api_v1_extract_markdown_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/api/v1/extract/tables": {
      "post": {
        "tags": [
          "PDF Processing"
        ],
        "summary": "Extract Tables from PDF",
        "description": "Extract tables from PDF and return as ZIP file containing CSV files",
        "operationId": "extract_tables_api_v1_api_v1_extract_tables_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page_number",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Page Number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_extract_tables_api_v1_api_v1_extract_tables_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/api/v1/extract/images": {
      "post": {
        "tags": [
          "PDF Processing"
        ],
        "summary": "Extract Images from PDF",
        "description": "Extract images and metadata from PDF and return as ZIP file",
        "operationId": "extract_images_api_v1_api_v1_extract_images_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page_number",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Page Number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_extract_images_api_v1_api_v1_extract_images_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/api/v1/health": {
      "get": {
        "tags": [
          "PDF Processing"
        ],
        "summary": "PDF Service Health Check",
        "description": "Check the health and availability of PDF processing services",
        "operationId": "health_check_api_v1_api_v1_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/documents/process": {
      "post": {
        "tags": [
          "Document Processing"
        ],
        "summary": "Process PDF Document",
        "description": "Process a PDF document with comprehensive extraction and analysis",
        "operationId": "process_document_api_v1_documents_process_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "extract_text",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Extract Text"
            }
          },
          {
            "name": "extract_images",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Extract Images"
            }
          },
          {
            "name": "extract_tables",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Extract Tables"
            }
          },
          {
            "name": "extract_metadata",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Extract Metadata"
            }
          },
          {
            "name": "page_range",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Page Range"
            }
          },
          {
            "name": "async_processing",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Async Processing"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_process_document_api_v1_documents_process_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentProcessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/documents/process-url": {
      "post": {
        "tags": [
          "Document Processing"
        ],
        "summary": "Process PDF from URL",
        "description": "Download and process a PDF document from a URL",
        "operationId": "process_document_from_url_api_v1_documents_process_url_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/URLProcessRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentProcessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/documents/batch-process": {
      "post": {
        "tags": [
          "Document Processing"
        ],
        "summary": "Batch Process Documents",
        "description": "Process multiple PDF documents in batch",
        "operationId": "batch_process_documents_api_v1_documents_batch_process_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BatchProcessRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchProcessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/documents/analyze": {
      "post": {
        "tags": [
          "Document Processing"
        ],
        "summary": "Analyze Document Structure",
        "description": "Perform advanced analysis of document structure and content",
        "operationId": "analyze_document_api_v1_documents_analyze_post",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "analyze_structure",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Analyze Structure"
            }
          },
          {
            "name": "analyze_content",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Analyze Content"
            }
          },
          {
            "name": "analyze_images",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Analyze Images"
            }
          },
          {
            "name": "generate_summary",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false,
              "title": "Generate Summary"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_analyze_document_api_v1_documents_analyze_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentAnalysisResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/documents/job/{job_id}": {
      "get": {
        "tags": [
          "Document Processing"
        ],
        "summary": "Get Job Status",
        "description": "Get the status and result of a processing job",
        "operationId": "get_job_status_api_v1_documents_job__job_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/documents/health": {
      "get": {
        "tags": [
          "Document Processing"
        ],
        "summary": "Document Service Health Check",
        "description": "Check the health and availability of document processing services",
        "operationId": "health_check_api_v1_documents_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__common__HealthCheckResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/documents/documents": {
      "get": {
        "tags": [
          "Document Processing"
        ],
        "summary": "List Documents",
        "description": "Retrieve a paginated list of documents with filtering and sorting.\n\nThis endpoint provides comprehensive document listing with:\n- Pagination support\n- Full-text search capabilities\n- Tag-based filtering\n- Status filtering\n- Flexible sorting options\n- Caching headers for performance",
        "operationId": "list_documents_api_v1_documents_documents_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Items per page",
              "default": 20,
              "title": "Page Size"
            },
            "description": "Items per page"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search query for document content",
              "title": "Search"
            },
            "description": "Search query for document content"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by tags",
              "title": "Tags"
            },
            "description": "Filter by tags"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by processing status",
              "title": "Status"
            },
            "description": "Filter by processing status"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Sort field",
              "default": "created_at",
              "title": "Sort By"
            },
            "description": "Sort field"
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "pattern": "^(asc|desc)$",
              "description": "Sort order",
              "default": "desc",
              "title": "Sort Order"
            },
            "description": "Sort order"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__documents__DocumentListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/documents/documents/{document_id}": {
      "get": {
        "tags": [
          "Document Processing"
        ],
        "summary": "Get Document Metadata",
        "description": "Retrieve detailed metadata for a specific document.\n\nReturns comprehensive document information including:\n- Basic metadata (title, dates, status)\n- Processing statistics\n- Content structure information\n- Available features (embeddings, etc.)",
        "operationId": "get_document_metadata_api_v1_documents_documents__document_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Document Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentMetadataResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Document Processing"
        ],
        "summary": "Delete Document",
        "description": "Delete a document and all associated data.\n\nThis operation:\n- Removes the document record from the database\n- Cleans up associated files and embeddings\n- Cannot be undone",
        "operationId": "delete_document_api_v1_documents_documents__document_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Document Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/documents/documents/{document_id}/content": {
      "get": {
        "tags": [
          "Document Processing"
        ],
        "summary": "Get Document Content",
        "description": "Retrieve document content in various formats.\n\nSupports multiple content formats:\n- Markdown formatted content (default)\n- Raw extracted text\n- Chunked content for processing\n\nContent is cached for performance optimization.",
        "operationId": "get_document_content_api_v1_documents_documents__document_id__content_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Document Id"
            }
          },
          {
            "name": "include_raw",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include raw extracted content",
              "default": false,
              "title": "Include Raw"
            },
            "description": "Include raw extracted content"
          },
          {
            "name": "include_markdown",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include markdown formatted content",
              "default": true,
              "title": "Include Markdown"
            },
            "description": "Include markdown formatted content"
          },
          {
            "name": "include_chunks",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include content chunks",
              "default": false,
              "title": "Include Chunks"
            },
            "description": "Include content chunks"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentContentResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/{document_id}/query": {
      "post": {
        "tags": [
          "Search",
          "Embeddings",
          "Chat"
        ],
        "summary": "Query specific document",
        "description": "Query a specific document using natural language with RAG capabilities",
        "operationId": "query_document_api_documents__document_id__query_post",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Document Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentQueryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentQueryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/search/semantic": {
      "post": {
        "tags": [
          "Search",
          "Embeddings",
          "Chat"
        ],
        "summary": "Semantic search across documents",
        "description": "Perform semantic search across multiple documents using vector similarity",
        "operationId": "semantic_search_api_search_semantic_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SemanticSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SemanticSearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/search/similarity": {
      "post": {
        "tags": [
          "Search",
          "Embeddings",
          "Chat"
        ],
        "summary": "Vector similarity search",
        "description": "Find documents similar to a given text using vector embeddings",
        "operationId": "similarity_search_api_search_similarity_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SimilaritySearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimilaritySearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/{document_id}/related": {
      "get": {
        "tags": [
          "Search",
          "Embeddings",
          "Chat"
        ],
        "summary": "Find related documents",
        "description": "Find documents related to a specific document based on content similarity",
        "operationId": "find_related_documents_api_documents__document_id__related_get",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Document Id"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 20,
              "minimum": 1,
              "description": "Maximum number of related documents to return",
              "default": 5,
              "title": "Limit"
            },
            "description": "Maximum number of related documents to return"
          },
          {
            "name": "similarity_threshold",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 1,
              "minimum": 0,
              "description": "Minimum similarity threshold",
              "default": 0.7,
              "title": "Similarity Threshold"
            },
            "description": "Minimum similarity threshold"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RelatedDocumentsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/{document_id}/summarize": {
      "post": {
        "tags": [
          "Search",
          "Embeddings",
          "Chat"
        ],
        "summary": "Generate document summary",
        "description": "Generate an intelligent summary of a document using RAG",
        "operationId": "summarize_document_api_documents__document_id__summarize_post",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Document Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentSummaryRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentSummaryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/{document_id}/extract-entities": {
      "post": {
        "tags": [
          "Search",
          "Embeddings",
          "Chat"
        ],
        "summary": "Extract named entities",
        "description": "Extract named entities (people, organizations, dates, etc.) from a document",
        "operationId": "extract_entities_api_documents__document_id__extract_entities_post",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Document Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntityExtractionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EntityExtractionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/compare": {
      "post": {
        "tags": [
          "Search",
          "Embeddings",
          "Chat"
        ],
        "summary": "Compare multiple documents",
        "description": "Compare and analyze similarities and differences between multiple documents",
        "operationId": "compare_documents_api_documents_compare_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentComparisonRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentComparisonResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/search/health": {
      "get": {
        "tags": [
          "Search",
          "Embeddings",
          "Chat"
        ],
        "summary": "Search service health check",
        "description": "Check the health and availability of search and RAG services",
        "operationId": "search_health_check_api_search_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/search/multimodal": {
      "post": {
        "tags": [
          "Search",
          "Embeddings",
          "Chat"
        ],
        "summary": "Multi-modal search across documents",
        "description": "Perform advanced multi-modal search across text and images with OCR support",
        "operationId": "multimodal_search_api_search_multimodal_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__schemas__search__SearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__search__SearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/query/multimodal": {
      "post": {
        "tags": [
          "Search",
          "Embeddings",
          "Chat"
        ],
        "summary": "Multi-modal RAG query",
        "description": "Query documents using multi-modal RAG with text and image context",
        "operationId": "multimodal_query_api_query_multimodal_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__schemas__search__QueryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__search__QueryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/search/images": {
      "post": {
        "tags": [
          "Search",
          "Embeddings",
          "Chat"
        ],
        "summary": "Image-specific search",
        "description": "Search specifically within document images using visual analysis and OCR",
        "operationId": "image_search_api_search_images_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__schemas__search__ImageSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__search__ImageSearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analyze/multimodal": {
      "post": {
        "tags": [
          "Search",
          "Embeddings",
          "Chat"
        ],
        "summary": "Comprehensive multi-modal document analysis",
        "description": "Perform comprehensive analysis of document content including text, images, and structure",
        "operationId": "multimodal_analysis_api_analyze_multimodal_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultiModalAnalysisRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MultiModalAnalysisResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/search/materials/visual": {
      "post": {
        "tags": [
          "Search",
          "Embeddings",
          "Chat"
        ],
        "summary": "Material-specific visual search",
        "description": "Perform visual search with material property filtering and analysis",
        "operationId": "material_visual_search_api_search_materials_visual_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MaterialSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MaterialSearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/analyze/materials/image": {
      "post": {
        "tags": [
          "Search",
          "Embeddings",
          "Chat"
        ],
        "summary": "Analyze material image",
        "description": "Analyze a material image using integrated visual analysis",
        "operationId": "analyze_material_image_api_analyze_materials_image_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/embeddings/materials/generate": {
      "post": {
        "tags": [
          "Search",
          "Embeddings",
          "Chat"
        ],
        "summary": "Generate material embeddings",
        "description": "Generate CLIP and custom embeddings for material images",
        "operationId": "generate_material_embeddings_api_embeddings_materials_generate_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Request"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/search/materials/{material_id}/similar": {
      "get": {
        "tags": [
          "Search",
          "Embeddings",
          "Chat"
        ],
        "summary": "Find similar materials",
        "description": "Find materials similar to a reference material using visual and property analysis",
        "operationId": "find_similar_materials_api_search_materials__material_id__similar_get",
        "parameters": [
          {
            "name": "material_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Material Id"
            }
          },
          {
            "name": "similarity_threshold",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "maximum": 1,
              "minimum": 0,
              "description": "Minimum similarity threshold",
              "default": 0.75,
              "title": "Similarity Threshold"
            },
            "description": "Minimum similarity threshold"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Maximum number of results",
              "default": 20,
              "title": "Limit"
            },
            "description": "Maximum number of results"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/search/materials/health": {
      "get": {
        "tags": [
          "Search",
          "Embeddings",
          "Chat"
        ],
        "summary": "Material visual search health check",
        "description": "Check health and availability of material visual search services",
        "operationId": "material_search_health_check_api_search_materials_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/images/analyze": {
      "post": {
        "tags": [
          "Image Analysis"
        ],
        "summary": "Analyze Image",
        "description": "Analyze an image using Material Kai Vision Platform.\n\nPerforms comprehensive image analysis including:\n- AI-generated description\n- OCR text extraction\n- Object detection\n- Face detection (optional)\n- Content categorization",
        "operationId": "analyze_image_api_v1_images_analyze_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageAnalysisRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageAnalysisResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/images/analyze/batch": {
      "post": {
        "tags": [
          "Image Analysis"
        ],
        "summary": "Analyze Images Batch",
        "description": "Analyze multiple images in batch using Material Kai Vision Platform.\n\nSupports parallel processing for improved performance.",
        "operationId": "analyze_images_batch_api_v1_images_analyze_batch_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageBatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageBatchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/images/search": {
      "post": {
        "tags": [
          "Image Analysis"
        ],
        "summary": "Search Similar Images",
        "description": "Search for similar images using visual similarity or description matching.\n\nSupports both image-to-image and text-to-image search.",
        "operationId": "search_similar_images_api_v1_images_search_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__schemas__images__ImageSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__schemas__images__ImageSearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/images/upload/analyze": {
      "post": {
        "tags": [
          "Image Analysis"
        ],
        "summary": "Upload And Analyze Image",
        "description": "Upload an image file and analyze it using Material Kai Vision Platform.\n\nSupports direct file upload with immediate analysis.",
        "operationId": "upload_and_analyze_image_api_v1_images_upload_analyze_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_and_analyze_image_api_v1_images_upload_analyze_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageAnalysisResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/v1/images/health": {
      "get": {
        "tags": [
          "Image Analysis"
        ],
        "summary": "Health Check",
        "description": "Health check for image analysis service and Material Kai integration.",
        "operationId": "health_check_api_v1_images_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/jobs": {
      "get": {
        "tags": [
          "Health & Monitoring"
        ],
        "summary": "List Jobs",
        "description": "List all jobs with optional filtering and pagination\n\n- **status**: Filter jobs by status (pending, running, completed, failed, cancelled)\n- **job_type**: Filter jobs by type (document_processing, bulk_processing, etc.)\n- **limit**: Number of jobs to return (default: 50, max: 100)\n- **offset**: Number of jobs to skip for pagination",
        "operationId": "list_jobs_api_jobs_get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by job status",
              "title": "Status"
            },
            "description": "Filter by job status"
          },
          {
            "name": "job_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by job type",
              "title": "Job Type"
            },
            "description": "Filter by job type"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1,
              "title": "Page"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "default": 20,
              "title": "Page Size"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "pattern": "^(asc|desc)$"
                },
                {
                  "type": "null"
                }
              ],
              "default": "desc",
              "title": "Sort Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/jobs/{job_id}": {
      "get": {
        "tags": [
          "Health & Monitoring"
        ],
        "summary": "Get Job Status",
        "description": "Get detailed status information for a specific job\n\n- **job_id**: Unique identifier for the job",
        "operationId": "get_job_status_api_jobs__job_id__get",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Health & Monitoring"
        ],
        "summary": "Cancel Job",
        "description": "Cancel a running job\n\n- **job_id**: Unique identifier for the job to cancel",
        "operationId": "cancel_job_api_jobs__job_id__delete",
        "security": [
          {
            "HTTPBearer": []
          }
        ],
        "parameters": [
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Job Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/jobs/statistics": {
      "get": {
        "tags": [
          "Health & Monitoring"
        ],
        "summary": "Get Job Statistics",
        "description": "Get comprehensive job statistics and metrics",
        "operationId": "get_job_statistics_api_jobs_statistics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Response Get Job Statistics Api Jobs Statistics Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/bulk/process": {
      "post": {
        "tags": [
          "Health & Monitoring"
        ],
        "summary": "Bulk Process Documents",
        "description": "Process multiple documents in bulk\n\n- **urls**: List of document URLs to process\n- **options**: Processing options (extract_images, generate_summary, etc.)\n- **batch_size**: Number of documents to process concurrently (default: 5)",
        "operationId": "bulk_process_documents_api_bulk_process_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkProcessingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkProcessingResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/system/health": {
      "get": {
        "tags": [
          "Health & Monitoring"
        ],
        "summary": "Get System Health",
        "description": "Get comprehensive system health status",
        "operationId": "get_system_health_api_system_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/system/metrics": {
      "get": {
        "tags": [
          "Health & Monitoring"
        ],
        "summary": "Get System Metrics",
        "description": "Get detailed system performance metrics",
        "operationId": "get_system_metrics_api_system_metrics_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/data/cleanup": {
      "delete": {
        "tags": [
          "Health & Monitoring"
        ],
        "summary": "Cleanup Old Data",
        "description": "Clean up old data from the system\n\n- **days_old**: Delete data older than this many days (default: 30)\n- **dry_run**: Preview what would be deleted without actually deleting (default: true)",
        "operationId": "cleanup_old_data_api_data_cleanup_delete",
        "parameters": [
          {
            "name": "days_old",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Delete data older than this many days",
              "default": 30,
              "title": "Days Old"
            },
            "description": "Delete data older than this many days"
          },
          {
            "name": "dry_run",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Preview what would be deleted without actually deleting",
              "default": true,
              "title": "Dry Run"
            },
            "description": "Preview what would be deleted without actually deleting"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/data/backup": {
      "post": {
        "tags": [
          "Health & Monitoring"
        ],
        "summary": "Create Data Backup",
        "description": "Create a backup of system data",
        "operationId": "create_data_backup_api_data_backup_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/data/export": {
      "get": {
        "tags": [
          "Health & Monitoring"
        ],
        "summary": "Export System Data",
        "description": "Export system data in various formats\n\n- **format**: Export format (json, csv)\n- **data_type**: Type of data to export (jobs, metrics)",
        "operationId": "export_system_data_api_data_export_get",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Export format (json, csv)",
              "default": "json",
              "title": "Format"
            },
            "description": "Export format (json, csv)"
          },
          {
            "name": "data_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "description": "Type of data to export (jobs, metrics)",
              "default": "jobs",
              "title": "Data Type"
            },
            "description": "Type of data to export (jobs, metrics)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/packages/status": {
      "get": {
        "tags": [
          "Health & Monitoring"
        ],
        "summary": "Get Package Status",
        "description": "Get the status of all system packages and dependencies.\n\nReturns package information for both critical and optional dependencies,\nincluding version information and availability status.",
        "operationId": "get_package_status_api_packages_status_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/rag/documents/upload": {
      "post": {
        "tags": [
          "RAG"
        ],
        "summary": "Upload Document",
        "description": "Upload and process a document for RAG functionality.\n\nThis endpoint accepts document uploads, processes them into chunks,\ngenerates embeddings, and stores them in the vector database.",
        "operationId": "upload_document_api_v1_rag_documents_upload_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_document_api_v1_rag_documents_upload_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentUploadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rag/query": {
      "post": {
        "tags": [
          "RAG"
        ],
        "summary": "Query Documents",
        "description": "Query documents using RAG (Retrieval-Augmented Generation).\n\nThis endpoint performs semantic search over the document collection\nand generates contextual answers using the retrieved information.",
        "operationId": "query_documents_api_v1_rag_query_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__api__rag_routes__QueryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__api__rag_routes__QueryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rag/chat": {
      "post": {
        "tags": [
          "RAG"
        ],
        "summary": "Chat With Documents",
        "description": "Conversational interface for document Q&A.\n\nThis endpoint maintains conversation context and provides\ncontextual responses based on the document collection.",
        "operationId": "chat_with_documents_api_v1_rag_chat_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rag/search": {
      "post": {
        "tags": [
          "RAG"
        ],
        "summary": "Search Documents",
        "description": "Semantic search across document collection.\n\nThis endpoint provides various search capabilities including\nsemantic, hybrid, and keyword search.",
        "operationId": "search_documents_api_v1_rag_search_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/app__api__rag_routes__SearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__api__rag_routes__SearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rag/documents": {
      "get": {
        "tags": [
          "RAG"
        ],
        "summary": "List Documents",
        "description": "List and filter documents in the collection.\n\nThis endpoint provides paginated access to the document collection\nwith optional filtering by search terms and tags.",
        "operationId": "list_documents_api_v1_rag_documents_get",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Page number",
              "default": 1,
              "title": "Page"
            },
            "description": "Page number"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Page size",
              "default": 20,
              "title": "Page Size"
            },
            "description": "Page size"
          },
          {
            "name": "search",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search term for filtering",
              "title": "Search"
            },
            "description": "Search term for filtering"
          },
          {
            "name": "tags",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Comma-separated tags for filtering",
              "title": "Tags"
            },
            "description": "Comma-separated tags for filtering"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__api__rag_routes__DocumentListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rag/documents/{document_id}": {
      "delete": {
        "tags": [
          "RAG"
        ],
        "summary": "Delete Document",
        "description": "Delete a document and its associated embeddings.\n\nThis endpoint removes a document from the collection and\ncleans up all associated data including embeddings and chunks.",
        "operationId": "delete_document_api_v1_rag_documents__document_id__delete",
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Document Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rag/health": {
      "get": {
        "tags": [
          "RAG"
        ],
        "summary": "Rag Health Check",
        "description": "Health check for RAG services.\n\nThis endpoint checks the health of all RAG-related services\nincluding LlamaIndex, embedding service, and vector store.",
        "operationId": "rag_health_check_api_v1_rag_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/app__api__rag_routes__HealthCheckResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rag/stats": {
      "get": {
        "tags": [
          "RAG"
        ],
        "summary": "Get Rag Statistics",
        "description": "Get RAG system statistics.\n\nThis endpoint provides statistics about the RAG system including\ndocument counts, embedding statistics, and performance metrics.",
        "operationId": "get_rag_statistics_api_v1_rag_stats_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/api/v1/rag/search/mmr": {
      "post": {
        "tags": [
          "RAG"
        ],
        "summary": "Mmr Search",
        "description": "Perform MMR (Maximal Marginal Relevance) search for diverse results.\n\nThis endpoint implements MMR search to provide diverse, non-redundant results\nby balancing relevance and diversity using the lambda parameter.",
        "operationId": "mmr_search_api_v1_rag_search_mmr_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MMRSearchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MMRSearchResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rag/search/advanced": {
      "post": {
        "tags": [
          "RAG"
        ],
        "summary": "Advanced Query Search",
        "description": "Perform advanced query search with optimization and expansion.\n\nThis endpoint provides advanced query processing including query expansion,\nrewriting, and optimization based on query type and search parameters.",
        "operationId": "advanced_query_search_api_v1_rag_search_advanced_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdvancedQueryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvancedQueryResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/semantic-analysis": {
      "post": {
        "tags": [
          "AI Analysis"
        ],
        "summary": "Perform semantic analysis on material images",
        "description": "Analyze material images using TogetherAI's LLaMA Vision model for semantic descriptions and material identification.",
        "operationId": "semantic_analysis_api_semantic_analysis_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SemanticAnalysisAPIRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SemanticAnalysisAPIResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/health": {
      "get": {
        "tags": [
          "AI Analysis"
        ],
        "summary": "Health check for TogetherAI service",
        "description": "Check the health and availability of the TogetherAI service.",
        "operationId": "health_check_api_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/models": {
      "get": {
        "tags": [
          "AI Analysis"
        ],
        "summary": "Get available TogetherAI models",
        "description": "Retrieve information about available TogetherAI models and their capabilities.",
        "operationId": "get_models_api_models_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AdvancedQueryRequest": {
        "properties": {
          "query": {
            "type": "string",
            "maxLength": 2000,
            "minLength": 1,
            "title": "Query",
            "description": "Query text"
          },
          "query_type": {
            "type": "string",
            "pattern": "^(factual|analytical|conversational|boolean|fuzzy|semantic)$",
            "title": "Query Type",
            "description": "Type of query",
            "default": "semantic"
          },
          "top_k": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 50,
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Top K",
            "description": "Number of results to retrieve",
            "default": 10
          },
          "enable_expansion": {
            "type": "boolean",
            "title": "Enable Expansion",
            "description": "Enable query expansion",
            "default": true
          },
          "enable_rewriting": {
            "type": "boolean",
            "title": "Enable Rewriting",
            "description": "Enable query rewriting",
            "default": true
          },
          "similarity_threshold": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Similarity Threshold",
            "description": "Similarity threshold",
            "default": 0.6
          },
          "document_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Ids",
            "description": "Filter by specific document IDs"
          },
          "metadata_filters": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata Filters",
            "description": "Metadata-based filters"
          },
          "search_operator": {
            "type": "string",
            "pattern": "^(AND|OR|NOT)$",
            "title": "Search Operator",
            "description": "Search operator for multiple terms",
            "default": "AND"
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "AdvancedQueryRequest",
        "description": "Request model for advanced query with optimization."
      },
      "AdvancedQueryResponse": {
        "properties": {
          "original_query": {
            "type": "string",
            "title": "Original Query",
            "description": "Original query text"
          },
          "optimized_query": {
            "type": "string",
            "title": "Optimized Query",
            "description": "Optimized/expanded query"
          },
          "query_type": {
            "type": "string",
            "title": "Query Type",
            "description": "Type of query processed"
          },
          "results": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Results",
            "description": "Search results with relevance scores"
          },
          "total_results": {
            "type": "integer",
            "title": "Total Results",
            "description": "Total number of results"
          },
          "expansion_terms": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Expansion Terms",
            "description": "Terms added during query expansion"
          },
          "processing_time": {
            "type": "number",
            "title": "Processing Time",
            "description": "Query processing time in seconds"
          },
          "confidence_score": {
            "type": "number",
            "title": "Confidence Score",
            "description": "Overall confidence score"
          }
        },
        "type": "object",
        "required": [
          "original_query",
          "optimized_query",
          "query_type",
          "results",
          "total_results",
          "expansion_terms",
          "processing_time",
          "confidence_score"
        ],
        "title": "AdvancedQueryResponse",
        "description": "Response model for advanced query."
      },
      "BaseResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the request was successful",
            "default": true
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Optional message or description"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          }
        },
        "type": "object",
        "title": "BaseResponse",
        "description": "Base response model with common fields."
      },
      "BatchProcessRequest": {
        "properties": {
          "urls": {
            "items": {
              "type": "string",
              "maxLength": 2083,
              "minLength": 1,
              "format": "uri"
            },
            "type": "array",
            "title": "Urls",
            "description": "List of PDF URLs to process"
          },
          "async_processing": {
            "type": "boolean",
            "title": "Async Processing",
            "description": "Whether to process asynchronously",
            "default": true
          },
          "options": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProcessingOptions"
              }
            ],
            "description": "Processing configuration"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "description": "Tags for all documents"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata",
            "description": "Metadata for all documents"
          }
        },
        "type": "object",
        "required": [
          "urls"
        ],
        "title": "BatchProcessRequest",
        "description": "Request model for batch processing multiple documents.",
        "example": {
          "async_processing": true,
          "options": {
            "extract_images": true,
            "extract_tables": true
          },
          "tags": [
            "batch",
            "research"
          ],
          "urls": [
            "https://example.com/doc1.pdf",
            "https://example.com/doc2.pdf"
          ]
        }
      },
      "BatchProcessResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the request was successful",
            "default": true
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Optional message or description"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          },
          "job_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Job Ids",
            "description": "List of job IDs for tracking"
          },
          "total_documents": {
            "type": "integer",
            "title": "Total Documents",
            "description": "Total number of documents to process"
          },
          "estimated_completion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Estimated Completion",
            "description": "Estimated completion time"
          }
        },
        "type": "object",
        "required": [
          "job_ids",
          "total_documents"
        ],
        "title": "BatchProcessResponse",
        "description": "Response model for batch processing.",
        "example": {
          "estimated_completion": "2024-07-26T18:30:00Z",
          "job_ids": [
            "job_123",
            "job_456"
          ],
          "message": "Batch processing started",
          "success": true,
          "total_documents": 2
        }
      },
      "Body_analyze_document_api_v1_documents_analyze_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "PDF file to analyze"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_analyze_document_api_v1_documents_analyze_post"
      },
      "Body_extract_images_api_v1_api_v1_extract_images_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "PDF file to process"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_extract_images_api_v1_api_v1_extract_images_post"
      },
      "Body_extract_markdown_api_v1_api_v1_extract_markdown_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "PDF file to process"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_extract_markdown_api_v1_api_v1_extract_markdown_post"
      },
      "Body_extract_tables_api_v1_api_v1_extract_tables_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "PDF file to process"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_extract_tables_api_v1_api_v1_extract_tables_post"
      },
      "Body_process_document_api_v1_documents_process_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "PDF file to process"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_process_document_api_v1_documents_process_post"
      },
      "Body_upload_and_analyze_image_api_v1_images_upload_analyze_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "analysis_types": {
            "type": "string",
            "title": "Analysis Types",
            "default": "description,ocr,objects"
          },
          "quality": {
            "type": "string",
            "title": "Quality",
            "default": "standard"
          },
          "language": {
            "type": "string",
            "title": "Language",
            "default": "auto"
          },
          "confidence_threshold": {
            "type": "number",
            "title": "Confidence Threshold",
            "default": 0.7
          },
          "document_context": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Context"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_and_analyze_image_api_v1_images_upload_analyze_post"
      },
      "Body_upload_document_api_v1_rag_documents_upload_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "tags": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags"
          },
          "chunk_size": {
            "type": "integer",
            "title": "Chunk Size",
            "default": 1000
          },
          "chunk_overlap": {
            "type": "integer",
            "title": "Chunk Overlap",
            "default": 200
          },
          "enable_embedding": {
            "type": "boolean",
            "title": "Enable Embedding",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_document_api_v1_rag_documents_upload_post"
      },
      "BoundingBox": {
        "properties": {
          "x": {
            "type": "number",
            "title": "X",
            "description": "X coordinate (normalized 0-1)"
          },
          "y": {
            "type": "number",
            "title": "Y",
            "description": "Y coordinate (normalized 0-1)"
          },
          "width": {
            "type": "number",
            "title": "Width",
            "description": "Width (normalized 0-1)"
          },
          "height": {
            "type": "number",
            "title": "Height",
            "description": "Height (normalized 0-1)"
          }
        },
        "type": "object",
        "required": [
          "x",
          "y",
          "width",
          "height"
        ],
        "title": "BoundingBox",
        "description": "Bounding box coordinates for detected objects."
      },
      "BulkProcessingRequest": {
        "properties": {
          "urls": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 100,
            "minItems": 1,
            "title": "Urls",
            "description": "List of document URLs to process"
          },
          "batch_size": {
            "type": "integer",
            "maximum": 20,
            "minimum": 1,
            "title": "Batch Size",
            "description": "Number of documents to process concurrently",
            "default": 5
          },
          "options": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Options",
            "description": "Processing options"
          }
        },
        "type": "object",
        "required": [
          "urls"
        ],
        "title": "BulkProcessingRequest",
        "description": "Request model for bulk document processing.",
        "example": {
          "batch_size": 5,
          "options": {
            "extract_images": true,
            "extract_text": true,
            "generate_summary": true
          },
          "urls": [
            "https://example.com/doc1.pdf",
            "https://example.com/doc2.pdf"
          ]
        }
      },
      "BulkProcessingResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the request was successful",
            "default": true
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Optional message or description"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          },
          "data": {
            "type": "object",
            "title": "Data",
            "description": "Bulk processing details"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "BulkProcessingResponse",
        "description": "Response model for bulk processing operations.",
        "example": {
          "data": {
            "estimated_completion_time": "2024-07-26T18:20:00Z",
            "job_id": "bulk_20240726_180000",
            "total_documents": 10
          },
          "message": "Bulk processing started successfully",
          "success": true,
          "timestamp": "2024-07-26T18:00:00Z"
        }
      },
      "ChatRequest": {
        "properties": {
          "message": {
            "type": "string",
            "maxLength": 2000,
            "minLength": 1,
            "title": "Message",
            "description": "Chat message"
          },
          "conversation_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Conversation Id",
            "description": "Conversation ID for context"
          },
          "top_k": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 20,
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Top K",
            "description": "Number of context chunks to retrieve",
            "default": 5
          },
          "include_history": {
            "type": "boolean",
            "title": "Include History",
            "description": "Include conversation history in context",
            "default": true
          },
          "document_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Ids",
            "description": "Filter by specific document IDs"
          }
        },
        "type": "object",
        "required": [
          "message"
        ],
        "title": "ChatRequest",
        "description": "Request model for conversational RAG."
      },
      "ChatResponse": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Original message"
          },
          "response": {
            "type": "string",
            "title": "Response",
            "description": "AI response"
          },
          "conversation_id": {
            "type": "string",
            "title": "Conversation Id",
            "description": "Conversation ID"
          },
          "sources": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Sources",
            "description": "Source documents used"
          },
          "processing_time": {
            "type": "number",
            "title": "Processing Time",
            "description": "Response generation time"
          }
        },
        "type": "object",
        "required": [
          "message",
          "response",
          "conversation_id",
          "sources",
          "processing_time"
        ],
        "title": "ChatResponse",
        "description": "Response model for conversational RAG."
      },
      "DetectedObject": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label",
            "description": "Object label/class"
          },
          "confidence": {
            "type": "number",
            "title": "Confidence",
            "description": "Detection confidence (0-1)"
          },
          "bounding_box": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BoundingBox"
              }
            ],
            "description": "Object location"
          },
          "attributes": {
            "type": "object",
            "title": "Attributes",
            "description": "Additional object attributes"
          }
        },
        "type": "object",
        "required": [
          "label",
          "confidence",
          "bounding_box"
        ],
        "title": "DetectedObject",
        "description": "Detected object in image."
      },
      "DetectedText": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "description": "Extracted text"
          },
          "confidence": {
            "type": "number",
            "title": "Confidence",
            "description": "OCR confidence (0-1)"
          },
          "bounding_box": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BoundingBox"
              }
            ],
            "description": "Text location"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "Detected language"
          },
          "font_info": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Font Info",
            "description": "Font characteristics"
          }
        },
        "type": "object",
        "required": [
          "text",
          "confidence",
          "bounding_box"
        ],
        "title": "DetectedText",
        "description": "Detected text in image (OCR result)."
      },
      "DocumentAnalysisResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the request was successful",
            "default": true
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Optional message or description"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          },
          "document_id": {
            "type": "string",
            "title": "Document Id",
            "description": "Document identifier"
          },
          "analysis": {
            "type": "object",
            "title": "Analysis",
            "description": "Analysis results"
          },
          "processing_time": {
            "type": "number",
            "title": "Processing Time",
            "description": "Processing time in seconds"
          }
        },
        "type": "object",
        "required": [
          "document_id",
          "analysis",
          "processing_time"
        ],
        "title": "DocumentAnalysisResponse",
        "description": "Response model for document analysis.",
        "example": {
          "analysis": {
            "content": {
              "topics": [
                "AI",
                "ML"
              ],
              "word_count": 2500
            },
            "structure": {
              "pages": 10,
              "sections": 5
            },
            "summary": "This document discusses AI and ML concepts..."
          },
          "document_id": "doc_123",
          "message": "Document analysis completed",
          "processing_time": 15.5,
          "success": true
        }
      },
      "DocumentChunk": {
        "properties": {
          "chunk_id": {
            "type": "string",
            "title": "Chunk Id",
            "description": "Unique chunk identifier"
          },
          "content": {
            "type": "string",
            "title": "Content",
            "description": "Text content of the chunk"
          },
          "page_number": {
            "type": "integer",
            "title": "Page Number",
            "description": "Source page number"
          },
          "chunk_index": {
            "type": "integer",
            "title": "Chunk Index",
            "description": "Index within the page"
          },
          "start_char": {
            "type": "integer",
            "title": "Start Char",
            "description": "Start character position"
          },
          "end_char": {
            "type": "integer",
            "title": "End Char",
            "description": "End character position"
          },
          "embedding": {
            "anyOf": [
              {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Embedding",
            "description": "Vector embedding (if generated)"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata",
            "description": "Chunk-specific metadata"
          }
        },
        "type": "object",
        "required": [
          "chunk_id",
          "content",
          "page_number",
          "chunk_index",
          "start_char",
          "end_char"
        ],
        "title": "DocumentChunk",
        "description": "Represents a chunk of document content."
      },
      "DocumentComparisonRequest": {
        "properties": {
          "document_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 10,
            "minItems": 2,
            "title": "Document Ids",
            "description": "List of document IDs to compare"
          },
          "comparison_aspect": {
            "type": "string",
            "title": "Comparison Aspect",
            "description": "Aspect to compare (content, structure, themes, etc.)",
            "default": "content"
          },
          "include_similarities": {
            "type": "boolean",
            "title": "Include Similarities",
            "description": "Whether to include similarity analysis",
            "default": true
          },
          "include_differences": {
            "type": "boolean",
            "title": "Include Differences",
            "description": "Whether to include difference analysis",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "document_ids"
        ],
        "title": "DocumentComparisonRequest",
        "description": "Request model for comparing multiple documents.",
        "example": {
          "comparison_aspect": "content",
          "document_ids": [
            "doc_123",
            "doc_456",
            "doc_789"
          ],
          "include_differences": true,
          "include_similarities": true
        }
      },
      "DocumentComparisonResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the request was successful",
            "default": true
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Optional message or description"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          },
          "document_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Document Ids",
            "description": "List of compared document IDs"
          },
          "comparison_aspect": {
            "type": "string",
            "title": "Comparison Aspect",
            "description": "Aspect that was compared"
          },
          "comparison_result": {
            "type": "string",
            "title": "Comparison Result",
            "description": "Detailed comparison analysis"
          },
          "documents_info": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Documents Info",
            "description": "Information about compared documents"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata",
            "description": "Comparison metadata and analysis details"
          }
        },
        "type": "object",
        "required": [
          "document_ids",
          "comparison_aspect",
          "comparison_result"
        ],
        "title": "DocumentComparisonResponse",
        "description": "Response model for document comparison analysis.",
        "example": {
          "comparison_aspect": "content",
          "comparison_result": "The documents share similar themes around AI and machine learning, but differ in their technical depth...",
          "document_ids": [
            "doc_123",
            "doc_456"
          ],
          "documents_info": [
            {
              "content_type": "academic",
              "document_id": "doc_123",
              "title": "AI Research Paper"
            },
            {
              "content_type": "technical",
              "document_id": "doc_456",
              "title": "ML Implementation Guide"
            }
          ],
          "metadata": {
            "analysis_time": 3.2,
            "comparison_method": "llm_based_analysis",
            "similarity_score": 0.75
          },
          "success": true,
          "timestamp": "2024-07-26T18:00:00Z"
        }
      },
      "DocumentContent": {
        "properties": {
          "markdown_content": {
            "type": "string",
            "title": "Markdown Content",
            "description": "Full document content in Markdown format"
          },
          "chunks": {
            "items": {
              "$ref": "#/components/schemas/DocumentChunk"
            },
            "type": "array",
            "title": "Chunks",
            "description": "Document chunks for RAG"
          },
          "images": {
            "items": {
              "$ref": "#/components/schemas/ImageInfo"
            },
            "type": "array",
            "title": "Images",
            "description": "Extracted images"
          },
          "tables": {
            "items": {
              "$ref": "#/components/schemas/TableInfo"
            },
            "type": "array",
            "title": "Tables",
            "description": "Extracted tables"
          },
          "summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Summary",
            "description": "AI-generated document summary"
          },
          "key_topics": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Key Topics",
            "description": "Identified key topics"
          },
          "entities": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Entities",
            "description": "Named entities"
          }
        },
        "type": "object",
        "required": [
          "markdown_content"
        ],
        "title": "DocumentContent",
        "description": "Complete document content structure."
      },
      "DocumentContentResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the request was successful",
            "default": true
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Optional message or description"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          },
          "content": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DocumentContent"
              }
            ],
            "description": "Document content"
          }
        },
        "type": "object",
        "required": [
          "content"
        ],
        "title": "DocumentContentResponse",
        "description": "Response model for document content retrieval.",
        "example": {
          "content": {
            "chunks": [],
            "images": [],
            "markdown_content": "# Research Paper\n\nThis paper discusses...",
            "tables": []
          },
          "message": "Document content retrieved successfully",
          "success": true
        }
      },
      "DocumentListItem": {
        "properties": {
          "document_id": {
            "type": "string",
            "title": "Document Id",
            "description": "Unique document identifier"
          },
          "document_name": {
            "type": "string",
            "title": "Document Name",
            "description": "Document name"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProcessingStatus"
              }
            ],
            "description": "Processing status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Last update timestamp"
          },
          "page_count": {
            "type": "integer",
            "title": "Page Count",
            "description": "Number of pages"
          },
          "word_count": {
            "type": "integer",
            "title": "Word Count",
            "description": "Word count"
          },
          "file_size": {
            "type": "integer",
            "title": "File Size",
            "description": "File size in bytes"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "description": "Document tags"
          },
          "processing_time": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processing Time",
            "description": "Processing time in seconds"
          },
          "has_embeddings": {
            "type": "boolean",
            "title": "Has Embeddings",
            "description": "Whether embeddings are available",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "document_id",
          "document_name",
          "status",
          "created_at",
          "updated_at",
          "page_count",
          "word_count",
          "file_size"
        ],
        "title": "DocumentListItem",
        "description": "Simplified document information for list responses."
      },
      "DocumentMetadata": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title",
            "description": "Document title"
          },
          "author": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author",
            "description": "Document author"
          },
          "subject": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject",
            "description": "Document subject"
          },
          "creator": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Creator",
            "description": "Document creator application"
          },
          "producer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Producer",
            "description": "PDF producer"
          },
          "creation_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Creation Date",
            "description": "Document creation date"
          },
          "modification_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modification Date",
            "description": "Last modification date"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "Detected document language"
          },
          "confidence_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confidence Score",
            "description": "Processing confidence score"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "description": "User-defined tags"
          },
          "custom_fields": {
            "type": "object",
            "title": "Custom Fields",
            "description": "Custom metadata fields"
          }
        },
        "type": "object",
        "title": "DocumentMetadata",
        "description": "Comprehensive document metadata."
      },
      "DocumentMetadataResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the request was successful",
            "default": true
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Optional message or description"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          },
          "metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DocumentMetadata"
              }
            ],
            "description": "Document metadata"
          }
        },
        "type": "object",
        "required": [
          "metadata"
        ],
        "title": "DocumentMetadataResponse",
        "description": "Response model for document metadata retrieval.",
        "example": {
          "message": "Document metadata retrieved successfully",
          "metadata": {
            "author": "Dr. Smith",
            "creation_date": "2024-07-26T18:00:00Z",
            "file_size": 2048000,
            "page_count": 25,
            "tags": [
              "research",
              "ai",
              "machine-learning"
            ],
            "title": "Research Paper on AI",
            "word_count": 5000
          },
          "success": true
        }
      },
      "DocumentProcessResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the request was successful",
            "default": true
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Optional message or description"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          },
          "document_id": {
            "type": "string",
            "title": "Document Id",
            "description": "Unique document identifier"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProcessingStatus"
              }
            ],
            "description": "Processing status"
          },
          "source_info": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FileUploadInfo"
              },
              {
                "$ref": "#/components/schemas/URLInfo"
              }
            ],
            "title": "Source Info",
            "description": "Source document information"
          },
          "content": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DocumentContent"
              },
              {
                "type": "null"
              }
            ],
            "description": "Processed document content"
          },
          "metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DocumentMetadata"
              }
            ],
            "description": "Document metadata"
          },
          "metrics": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MetricsSummary"
              }
            ],
            "description": "Processing metrics"
          },
          "storage_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Storage Path",
            "description": "Path where document is stored"
          },
          "embeddings_generated": {
            "type": "boolean",
            "title": "Embeddings Generated",
            "description": "Whether embeddings were generated",
            "default": false
          },
          "error_details": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Details",
            "description": "Error details if processing failed"
          }
        },
        "type": "object",
        "required": [
          "document_id",
          "status",
          "source_info",
          "metadata",
          "metrics"
        ],
        "title": "DocumentProcessResponse",
        "description": "Response model for document processing.",
        "example": {
          "content": {
            "chunks": [],
            "images": [],
            "markdown_content": "# Research Paper Title\n\nAbstract content...",
            "tables": []
          },
          "document_id": "doc_123e4567-e89b-12d3-a456-426614174000",
          "embeddings_generated": true,
          "metadata": {
            "author": "John Doe",
            "page_count": 15,
            "tags": [
              "research",
              "ai"
            ],
            "title": "Research Paper Title"
          },
          "metrics": {
            "character_count": 30000,
            "page_count": 15,
            "processing_time_seconds": 45.2,
            "word_count": 5000
          },
          "source_info": {
            "content_type": "application/pdf",
            "filename": "research_paper.pdf",
            "size_bytes": 2048576
          },
          "status": "completed",
          "success": true,
          "timestamp": "2024-07-26T18:00:00Z"
        }
      },
      "DocumentQueryRequest": {
        "properties": {
          "query": {
            "type": "string",
            "maxLength": 2000,
            "minLength": 1,
            "title": "Query",
            "description": "Question or query about the document"
          },
          "response_mode": {
            "type": "string",
            "title": "Response Mode",
            "description": "Response mode (compact, tree_summarize, etc.)",
            "default": "compact"
          },
          "include_sources": {
            "type": "boolean",
            "title": "Include Sources",
            "description": "Whether to include source citations",
            "default": true
          },
          "max_tokens": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 4000,
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Tokens",
            "description": "Maximum tokens in response"
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "DocumentQueryRequest",
        "description": "Request model for document-specific RAG queries.",
        "example": {
          "include_sources": true,
          "max_tokens": 1000,
          "query": "What are the main findings in this research paper?",
          "response_mode": "compact"
        }
      },
      "DocumentQueryResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the request was successful",
            "default": true
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Optional message or description"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          },
          "document_id": {
            "type": "string",
            "title": "Document Id",
            "description": "ID of the queried document"
          },
          "query": {
            "type": "string",
            "title": "Query",
            "description": "Original query"
          },
          "response": {
            "type": "string",
            "title": "Response",
            "description": "Generated response based on document content"
          },
          "sources": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Sources",
            "description": "Source citations and references"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata",
            "description": "Additional response metadata"
          }
        },
        "type": "object",
        "required": [
          "document_id",
          "query",
          "response"
        ],
        "title": "DocumentQueryResponse",
        "description": "Response model for document-specific RAG queries.",
        "example": {
          "document_id": "doc_123",
          "metadata": {
            "document_title": "Research Paper",
            "response_time": 1.2
          },
          "query": "What are the main findings?",
          "response": "The main findings include...",
          "sources": [
            {
              "confidence": 0.95,
              "page": 1,
              "text": "relevant excerpt"
            }
          ],
          "success": true,
          "timestamp": "2024-07-26T18:00:00Z"
        }
      },
      "DocumentSummaryRequest": {
        "properties": {
          "summary_type": {
            "type": "string",
            "title": "Summary Type",
            "description": "Type of summary to generate (brief, comprehensive, key_points)",
            "default": "brief"
          },
          "max_length": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 2000,
                "minimum": 50
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Length",
            "description": "Maximum length of summary in words"
          },
          "include_metadata": {
            "type": "boolean",
            "title": "Include Metadata",
            "description": "Whether to include document metadata in response",
            "default": true
          }
        },
        "type": "object",
        "title": "DocumentSummaryRequest",
        "description": "Request model for document summarization.",
        "example": {
          "include_metadata": true,
          "max_length": 200,
          "summary_type": "brief"
        }
      },
      "DocumentSummaryResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the request was successful",
            "default": true
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Optional message or description"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          },
          "document_id": {
            "type": "string",
            "title": "Document Id",
            "description": "ID of the summarized document"
          },
          "summary_type": {
            "type": "string",
            "title": "Summary Type",
            "description": "Type of summary generated"
          },
          "summary": {
            "type": "string",
            "title": "Summary",
            "description": "Generated summary text"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata",
            "description": "Summary metadata and document information"
          }
        },
        "type": "object",
        "required": [
          "document_id",
          "summary_type",
          "summary"
        ],
        "title": "DocumentSummaryResponse",
        "description": "Response model for document summarization.",
        "example": {
          "document_id": "doc_123",
          "metadata": {
            "document_length": 5000,
            "document_title": "AI PDF Processing Research",
            "processing_time": 2.5,
            "summary_length": 200
          },
          "success": true,
          "summary": "This document discusses the implementation of AI-powered PDF processing systems...",
          "summary_type": "brief",
          "timestamp": "2024-07-26T18:00:00Z"
        }
      },
      "DocumentUploadResponse": {
        "properties": {
          "document_id": {
            "type": "string",
            "title": "Document Id",
            "description": "Unique document identifier"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "description": "Document title"
          },
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Processing status"
          },
          "chunks_created": {
            "type": "integer",
            "title": "Chunks Created",
            "description": "Number of chunks created"
          },
          "embeddings_generated": {
            "type": "boolean",
            "title": "Embeddings Generated",
            "description": "Whether embeddings were generated"
          },
          "processing_time": {
            "type": "number",
            "title": "Processing Time",
            "description": "Processing time in seconds"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Status message"
          }
        },
        "type": "object",
        "required": [
          "document_id",
          "title",
          "status",
          "chunks_created",
          "embeddings_generated",
          "processing_time",
          "message"
        ],
        "title": "DocumentUploadResponse",
        "description": "Response model for document upload."
      },
      "EntityExtractionRequest": {
        "properties": {
          "entity_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Entity Types",
            "description": "Types of entities to extract",
            "default": [
              "PERSON",
              "ORG",
              "DATE",
              "LOCATION"
            ]
          },
          "include_confidence": {
            "type": "boolean",
            "title": "Include Confidence",
            "description": "Whether to include confidence scores for extracted entities",
            "default": true
          },
          "min_confidence": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Min Confidence",
            "description": "Minimum confidence threshold for entity extraction",
            "default": 0.7
          }
        },
        "type": "object",
        "title": "EntityExtractionRequest",
        "description": "Request model for entity extraction from documents.",
        "example": {
          "entity_types": [
            "PERSON",
            "ORG",
            "DATE",
            "LOCATION",
            "MONEY"
          ],
          "include_confidence": true,
          "min_confidence": 0.8
        }
      },
      "EntityExtractionResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the request was successful",
            "default": true
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Optional message or description"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          },
          "document_id": {
            "type": "string",
            "title": "Document Id",
            "description": "ID of the processed document"
          },
          "entity_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Entity Types",
            "description": "Types of entities that were extracted"
          },
          "entities": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Entities",
            "description": "Extracted entities with their details"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata",
            "description": "Extraction metadata and document information"
          }
        },
        "type": "object",
        "required": [
          "document_id",
          "entity_types"
        ],
        "title": "EntityExtractionResponse",
        "description": "Response model for entity extraction from documents.",
        "example": {
          "document_id": "doc_123",
          "entities": [
            {
              "confidence": 0.95,
              "end_pos": 55,
              "start_pos": 45,
              "text": "John Smith",
              "type": "PERSON"
            },
            {
              "confidence": 0.92,
              "end_pos": 141,
              "start_pos": 120,
              "text": "Microsoft Corporation",
              "type": "ORG"
            }
          ],
          "entity_types": [
            "PERSON",
            "ORG",
            "DATE"
          ],
          "metadata": {
            "document_title": "Business Report 2024",
            "extraction_method": "llm_based",
            "total_entities": 15
          },
          "success": true,
          "timestamp": "2024-07-26T18:00:00Z"
        }
      },
      "FaceDetection": {
        "properties": {
          "confidence": {
            "type": "number",
            "title": "Confidence",
            "description": "Face detection confidence"
          },
          "bounding_box": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BoundingBox"
              }
            ],
            "description": "Face location"
          },
          "landmarks": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": {
                    "type": "number"
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Landmarks",
            "description": "Facial landmarks"
          },
          "attributes": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes",
            "description": "Face attributes (age, emotion, etc.)"
          }
        },
        "type": "object",
        "required": [
          "confidence",
          "bounding_box"
        ],
        "title": "FaceDetection",
        "description": "Detected face in image."
      },
      "FileUploadInfo": {
        "properties": {
          "filename": {
            "type": "string",
            "title": "Filename",
            "description": "Original filename"
          },
          "content_type": {
            "type": "string",
            "title": "Content Type",
            "description": "MIME content type"
          },
          "size_bytes": {
            "type": "integer",
            "title": "Size Bytes",
            "description": "File size in bytes"
          },
          "checksum": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Checksum",
            "description": "File checksum (MD5/SHA256)"
          }
        },
        "type": "object",
        "required": [
          "filename",
          "content_type",
          "size_bytes"
        ],
        "title": "FileUploadInfo",
        "description": "Information about uploaded file."
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "HealthResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "service": {
            "type": "string",
            "title": "Service"
          }
        },
        "type": "object",
        "required": [
          "status",
          "timestamp",
          "version",
          "service"
        ],
        "title": "HealthResponse",
        "description": "Health check response model."
      },
      "ImageAnalysisRequest": {
        "properties": {
          "image_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Id",
            "description": "ID of extracted image from document"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url",
            "description": "URL to external image"
          },
          "analysis_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Analysis Types",
            "description": "Types of analysis to perform",
            "default": [
              "description",
              "ocr",
              "objects"
            ]
          },
          "quality": {
            "type": "string",
            "pattern": "^(fast|standard|high)$",
            "title": "Quality",
            "description": "Analysis quality",
            "default": "standard"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "Language hint for OCR",
            "default": "auto"
          },
          "confidence_threshold": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Confidence Threshold",
            "description": "Minimum confidence for results",
            "default": 0.7
          },
          "document_context": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Context",
            "description": "Document context for better analysis"
          },
          "page_context": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Page Context",
            "description": "Page context around the image"
          }
        },
        "type": "object",
        "title": "ImageAnalysisRequest",
        "description": "Request model for image analysis using Material Kai Vision Platform.",
        "example": {
          "analysis_types": [
            "description",
            "ocr",
            "objects"
          ],
          "confidence_threshold": 0.8,
          "document_context": "Research paper about machine learning",
          "image_id": "img_123e4567-e89b-12d3-a456-426614174000",
          "language": "en",
          "quality": "standard"
        }
      },
      "ImageAnalysisResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the request was successful",
            "default": true
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Optional message or description"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          },
          "image_id": {
            "type": "string",
            "title": "Image Id",
            "description": "Image identifier"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProcessingStatus"
              }
            ],
            "description": "Analysis status"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "AI-generated image description"
          },
          "detected_objects": {
            "items": {
              "$ref": "#/components/schemas/DetectedObject"
            },
            "type": "array",
            "title": "Detected Objects",
            "description": "Detected objects"
          },
          "detected_text": {
            "items": {
              "$ref": "#/components/schemas/DetectedText"
            },
            "type": "array",
            "title": "Detected Text",
            "description": "OCR results"
          },
          "detected_faces": {
            "items": {
              "$ref": "#/components/schemas/FaceDetection"
            },
            "type": "array",
            "title": "Detected Faces",
            "description": "Face detection results"
          },
          "categories": {
            "items": {
              "additionalProperties": {
                "type": "number"
              },
              "type": "object"
            },
            "type": "array",
            "title": "Categories",
            "description": "Image categories with confidence"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "description": "Automatically generated tags"
          },
          "metadata": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ImageMetadata"
              }
            ],
            "description": "Image metadata and properties"
          },
          "analysis_types_performed": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Analysis Types Performed",
            "description": "Types of analysis completed"
          },
          "processing_time_ms": {
            "type": "number",
            "title": "Processing Time Ms",
            "description": "Analysis processing time"
          },
          "model_versions": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Model Versions",
            "description": "AI model versions used"
          },
          "error_details": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Details",
            "description": "Error details if analysis failed"
          }
        },
        "type": "object",
        "required": [
          "image_id",
          "status",
          "metadata",
          "analysis_types_performed",
          "processing_time_ms"
        ],
        "title": "ImageAnalysisResponse",
        "description": "Response model for image analysis.",
        "example": {
          "analysis_types_performed": [
            "description",
            "ocr",
            "objects"
          ],
          "categories": [
            {
              "technical_diagram": 0.92
            },
            {
              "educational_content": 0.87
            }
          ],
          "description": "A diagram showing a neural network architecture with multiple layers",
          "detected_objects": [
            {
              "bounding_box": {
                "height": 0.6,
                "width": 0.8,
                "x": 0.1,
                "y": 0.2
              },
              "confidence": 0.95,
              "label": "diagram"
            }
          ],
          "detected_text": [
            {
              "bounding_box": {
                "height": 0.05,
                "width": 0.4,
                "x": 0.3,
                "y": 0.1
              },
              "confidence": 0.98,
              "language": "en",
              "text": "Neural Network"
            }
          ],
          "image_id": "img_123e4567-e89b-12d3-a456-426614174000",
          "metadata": {
            "format": "PNG",
            "height": 768,
            "quality_score": 0.89,
            "size_bytes": 245760,
            "width": 1024
          },
          "processing_time_ms": 1250.5,
          "status": "completed",
          "success": true,
          "tags": [
            "neural network",
            "diagram",
            "ai",
            "machine learning"
          ],
          "timestamp": "2024-07-26T18:00:00Z"
        }
      },
      "ImageBatchRequest": {
        "properties": {
          "image_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "maxItems": 50,
            "minItems": 1,
            "title": "Image Ids",
            "description": "List of image IDs to analyze"
          },
          "analysis_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Analysis Types",
            "description": "Types of analysis to perform on all images",
            "default": [
              "description",
              "ocr"
            ]
          },
          "parallel_processing": {
            "type": "boolean",
            "title": "Parallel Processing",
            "description": "Process images in parallel",
            "default": true
          },
          "priority": {
            "type": "string",
            "pattern": "^(low|normal|high)$",
            "title": "Priority",
            "description": "Processing priority",
            "default": "normal"
          },
          "quality": {
            "type": "string",
            "pattern": "^(fast|standard|high)$",
            "title": "Quality",
            "description": "Analysis quality",
            "default": "standard"
          },
          "confidence_threshold": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Confidence Threshold",
            "description": "Minimum confidence threshold",
            "default": 0.7
          }
        },
        "type": "object",
        "required": [
          "image_ids"
        ],
        "title": "ImageBatchRequest",
        "description": "Request model for batch image analysis.",
        "example": {
          "analysis_types": [
            "description",
            "ocr",
            "objects"
          ],
          "image_ids": [
            "img_123e4567-e89b-12d3-a456-426614174000",
            "img_456e7890-e89b-12d3-a456-426614174001"
          ],
          "parallel_processing": true,
          "priority": "normal",
          "quality": "standard"
        }
      },
      "ImageBatchResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the request was successful",
            "default": true
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Optional message or description"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          },
          "batch_id": {
            "type": "string",
            "title": "Batch Id",
            "description": "Batch processing identifier"
          },
          "total_images": {
            "type": "integer",
            "title": "Total Images",
            "description": "Total number of images in batch"
          },
          "completed_count": {
            "type": "integer",
            "title": "Completed Count",
            "description": "Number of successfully processed images"
          },
          "failed_count": {
            "type": "integer",
            "title": "Failed Count",
            "description": "Number of failed images"
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/ImageBatchResult"
            },
            "type": "array",
            "title": "Results",
            "description": "Individual image results"
          },
          "total_processing_time_ms": {
            "type": "number",
            "title": "Total Processing Time Ms",
            "description": "Total batch processing time"
          },
          "average_time_per_image_ms": {
            "type": "number",
            "title": "Average Time Per Image Ms",
            "description": "Average processing time per image"
          }
        },
        "type": "object",
        "required": [
          "batch_id",
          "total_images",
          "completed_count",
          "failed_count",
          "results",
          "total_processing_time_ms",
          "average_time_per_image_ms"
        ],
        "title": "ImageBatchResponse",
        "description": "Response model for batch image analysis.",
        "example": {
          "average_time_per_image_ms": 1115.35,
          "batch_id": "batch_789e0123-e89b-12d3-a456-426614174000",
          "completed_count": 2,
          "failed_count": 0,
          "results": [
            {
              "image_id": "img_123",
              "processing_time_ms": 1250.5,
              "status": "completed"
            },
            {
              "image_id": "img_456",
              "processing_time_ms": 980.2,
              "status": "completed"
            }
          ],
          "success": true,
          "timestamp": "2024-07-26T18:00:00Z",
          "total_images": 2,
          "total_processing_time_ms": 2230.7
        }
      },
      "ImageBatchResult": {
        "properties": {
          "image_id": {
            "type": "string",
            "title": "Image Id",
            "description": "Image identifier"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProcessingStatus"
              }
            ],
            "description": "Processing status for this image"
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ImageAnalysisResponse"
              },
              {
                "type": "null"
              }
            ],
            "description": "Analysis result if successful"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Error message if failed"
          },
          "processing_time_ms": {
            "type": "number",
            "title": "Processing Time Ms",
            "description": "Processing time for this image"
          }
        },
        "type": "object",
        "required": [
          "image_id",
          "status",
          "processing_time_ms"
        ],
        "title": "ImageBatchResult",
        "description": "Individual result in batch processing."
      },
      "ImageInfo": {
        "properties": {
          "image_id": {
            "type": "string",
            "title": "Image Id",
            "description": "Unique image identifier"
          },
          "filename": {
            "type": "string",
            "title": "Filename",
            "description": "Image filename"
          },
          "page_number": {
            "type": "integer",
            "title": "Page Number",
            "description": "Source page number"
          },
          "format": {
            "type": "string",
            "title": "Format",
            "description": "Image format (PNG, JPEG, etc.)"
          },
          "size_bytes": {
            "type": "integer",
            "title": "Size Bytes",
            "description": "Image file size"
          },
          "dimensions": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Dimensions",
            "description": "Image dimensions (width, height)"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "AI-generated image description"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url",
            "description": "URL to access the image"
          }
        },
        "type": "object",
        "required": [
          "image_id",
          "filename",
          "page_number",
          "format",
          "size_bytes",
          "dimensions"
        ],
        "title": "ImageInfo",
        "description": "Information about extracted images."
      },
      "ImageMetadata": {
        "properties": {
          "width": {
            "type": "integer",
            "title": "Width",
            "description": "Image width in pixels"
          },
          "height": {
            "type": "integer",
            "title": "Height",
            "description": "Image height in pixels"
          },
          "format": {
            "type": "string",
            "title": "Format",
            "description": "Image format (JPEG, PNG, etc.)"
          },
          "size_bytes": {
            "type": "integer",
            "title": "Size Bytes",
            "description": "File size in bytes"
          },
          "color_mode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Color Mode",
            "description": "Color mode (RGB, CMYK, etc.)"
          },
          "resolution_dpi": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Resolution Dpi",
            "description": "Image resolution in DPI"
          },
          "quality_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quality Score",
            "description": "Overall image quality (0-1)"
          },
          "sharpness_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sharpness Score",
            "description": "Image sharpness (0-1)"
          },
          "dominant_colors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Dominant Colors",
            "description": "Dominant color palette"
          },
          "brightness": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Brightness",
            "description": "Average brightness (0-1)"
          },
          "contrast": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contrast",
            "description": "Image contrast (0-1)"
          },
          "exif_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exif Data",
            "description": "EXIF metadata"
          },
          "creation_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Creation Date",
            "description": "Image creation date"
          }
        },
        "type": "object",
        "required": [
          "width",
          "height",
          "format",
          "size_bytes"
        ],
        "title": "ImageMetadata",
        "description": "Comprehensive image metadata and analysis results."
      },
      "ImageSearchResult": {
        "properties": {
          "document_id": {
            "type": "string",
            "title": "Document Id",
            "description": "Source document ID"
          },
          "document_name": {
            "type": "string",
            "title": "Document Name",
            "description": "Document name"
          },
          "image_id": {
            "type": "string",
            "title": "Image Id",
            "description": "Image identifier"
          },
          "page_number": {
            "type": "integer",
            "title": "Page Number",
            "description": "Source page number"
          },
          "image_path": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Path",
            "description": "Path to image file"
          },
          "image_dimensions": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Dimensions",
            "description": "Image width and height"
          },
          "image_format": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Format",
            "description": "Image format (PNG, JPEG, etc.)"
          },
          "visual_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visual Description",
            "description": "AI-generated visual description"
          },
          "ocr_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ocr Text",
            "description": "OCR-extracted text from image"
          },
          "ocr_confidence": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ocr Confidence",
            "description": "OCR extraction confidence"
          },
          "similarity_score": {
            "type": "number",
            "title": "Similarity Score",
            "description": "Visual similarity score (0-1)"
          },
          "ocr_relevance_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ocr Relevance Score",
            "description": "OCR text relevance score"
          },
          "combined_score": {
            "type": "number",
            "title": "Combined Score",
            "description": "Final combined relevance score"
          },
          "visual_features": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visual Features",
            "description": "Extracted visual features"
          },
          "detected_objects": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Detected Objects",
            "description": "Detected objects in image"
          },
          "material_analysis": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Material Analysis",
            "description": "Material property analysis results"
          },
          "clip_embedding": {
            "anyOf": [
              {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clip Embedding",
            "description": "CLIP embedding vector for visual similarity"
          },
          "llama_analysis": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Llama Analysis",
            "description": "LLaMA Vision material analysis"
          },
          "material_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Material Type",
            "description": "Identified material type"
          },
          "material_confidence": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Material Confidence",
            "description": "Material identification confidence"
          },
          "spectral_properties": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Spectral Properties",
            "description": "Spectral analysis properties"
          },
          "chemical_composition": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chemical Composition",
            "description": "Chemical composition analysis"
          },
          "mechanical_properties": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mechanical Properties",
            "description": "Mechanical property analysis"
          }
        },
        "type": "object",
        "required": [
          "document_id",
          "document_name",
          "image_id",
          "page_number",
          "similarity_score",
          "combined_score"
        ],
        "title": "ImageSearchResult",
        "description": "Individual image search result."
      },
      "JobListItem": {
        "properties": {
          "job_id": {
            "type": "string",
            "title": "Job Id",
            "description": "Job identifier"
          },
          "job_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobType"
              }
            ],
            "description": "Job type"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobStatus"
              }
            ],
            "description": "Job status"
          },
          "priority": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobPriority"
              }
            ],
            "description": "Job priority"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At",
            "description": "Start timestamp"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At",
            "description": "Completion timestamp"
          },
          "progress_percentage": {
            "type": "number",
            "title": "Progress Percentage",
            "description": "Progress percentage",
            "default": 0
          },
          "current_step": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Step",
            "description": "Current processing step"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Job description"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "description": "Job tags"
          },
          "success": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Success",
            "description": "Success status if completed"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message",
            "description": "Error message if failed"
          }
        },
        "type": "object",
        "required": [
          "job_id",
          "job_type",
          "status",
          "priority",
          "created_at"
        ],
        "title": "JobListItem",
        "description": "Simplified job information for list responses."
      },
      "JobListResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the request was successful",
            "default": true
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Optional message or description"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          },
          "jobs": {
            "items": {
              "$ref": "#/components/schemas/JobListItem"
            },
            "type": "array",
            "title": "Jobs",
            "description": "List of jobs"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "description": "Total number of jobs"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Items per page"
          },
          "status_counts": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Status Counts",
            "description": "Count by status"
          },
          "type_counts": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Type Counts",
            "description": "Count by type"
          }
        },
        "type": "object",
        "required": [
          "jobs",
          "total_count",
          "page",
          "page_size"
        ],
        "title": "JobListResponse",
        "description": "Response model for job listing.",
        "example": {
          "jobs": [
            {
              "completed_at": "2024-07-26T18:05:00Z",
              "created_at": "2024-07-26T18:00:00Z",
              "description": "Process research paper",
              "job_id": "job_123",
              "job_type": "document_processing",
              "priority": "normal",
              "progress_percentage": 100,
              "status": "completed",
              "success": true
            }
          ],
          "page": 1,
          "page_size": 20,
          "status_counts": {
            "completed": 1,
            "failed": 0,
            "running": 0
          },
          "success": true,
          "timestamp": "2024-07-26T18:00:00Z",
          "total_count": 1,
          "type_counts": {
            "document_processing": 1
          }
        }
      },
      "JobPriority": {
        "type": "string",
        "enum": [
          "low",
          "normal",
          "high",
          "urgent"
        ],
        "title": "JobPriority",
        "description": "Job priority levels."
      },
      "JobProgress": {
        "properties": {
          "current_step": {
            "type": "string",
            "title": "Current Step",
            "description": "Current processing step"
          },
          "total_steps": {
            "type": "integer",
            "title": "Total Steps",
            "description": "Total number of steps"
          },
          "completed_steps": {
            "type": "integer",
            "title": "Completed Steps",
            "description": "Number of completed steps"
          },
          "progress_percentage": {
            "type": "number",
            "maximum": 100,
            "minimum": 0,
            "title": "Progress Percentage",
            "description": "Progress percentage"
          },
          "step_details": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Step Details",
            "description": "Step-specific details"
          },
          "estimated_remaining_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Estimated Remaining Seconds",
            "description": "Estimated time remaining"
          }
        },
        "type": "object",
        "required": [
          "current_step",
          "total_steps",
          "completed_steps",
          "progress_percentage"
        ],
        "title": "JobProgress",
        "description": "Job progress information."
      },
      "JobResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the request was successful",
            "default": true
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Optional message or description"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          },
          "job_id": {
            "type": "string",
            "title": "Job Id",
            "description": "Unique job identifier"
          },
          "job_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobType"
              }
            ],
            "description": "Type of job"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobStatus"
              }
            ],
            "description": "Current job status"
          },
          "priority": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobPriority"
              }
            ],
            "description": "Job priority"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Job creation timestamp"
          },
          "started_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Started At",
            "description": "Job start timestamp"
          },
          "completed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed At",
            "description": "Job completion timestamp"
          },
          "progress": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/JobProgress"
              },
              {
                "type": "null"
              }
            ],
            "description": "Job progress information"
          },
          "parameters": {
            "type": "object",
            "title": "Parameters",
            "description": "Job parameters"
          },
          "retry_count": {
            "type": "integer",
            "title": "Retry Count",
            "description": "Maximum retry attempts"
          },
          "current_retry": {
            "type": "integer",
            "title": "Current Retry",
            "description": "Current retry attempt",
            "default": 0
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/JobResult"
              },
              {
                "type": "null"
              }
            ],
            "description": "Job result if completed"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Job description"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "description": "Job tags"
          }
        },
        "type": "object",
        "required": [
          "job_id",
          "job_type",
          "status",
          "priority",
          "created_at",
          "parameters",
          "retry_count"
        ],
        "title": "JobResponse",
        "description": "Response model for job operations.",
        "example": {
          "created_at": "2024-07-26T18:00:00Z",
          "current_retry": 0,
          "description": "Process research paper",
          "job_id": "job_123e4567-e89b-12d3-a456-426614174000",
          "job_type": "document_processing",
          "parameters": {
            "document_url": "https://example.com/doc.pdf",
            "extract_images": true
          },
          "priority": "normal",
          "progress": {
            "completed_steps": 2,
            "current_step": "Extracting text",
            "estimated_remaining_seconds": 120,
            "progress_percentage": 40,
            "total_steps": 5
          },
          "retry_count": 3,
          "started_at": "2024-07-26T18:00:05Z",
          "status": "running",
          "success": true,
          "tags": [
            "research"
          ],
          "timestamp": "2024-07-26T18:00:00Z"
        }
      },
      "JobResult": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Whether job completed successfully"
          },
          "result_data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result Data",
            "description": "Job result data"
          },
          "output_files": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Output Files",
            "description": "Generated output files"
          },
          "artifacts": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Artifacts",
            "description": "Generated artifacts"
          },
          "processing_time_seconds": {
            "type": "number",
            "title": "Processing Time Seconds",
            "description": "Total processing time"
          },
          "memory_usage_mb": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Memory Usage Mb",
            "description": "Peak memory usage"
          },
          "cpu_time_seconds": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cpu Time Seconds",
            "description": "CPU time used"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message",
            "description": "Error message if failed"
          },
          "error_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Code",
            "description": "Machine-readable error code"
          },
          "error_details": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Details",
            "description": "Detailed error information"
          }
        },
        "type": "object",
        "required": [
          "success",
          "processing_time_seconds"
        ],
        "title": "JobResult",
        "description": "Job execution result."
      },
      "JobStatus": {
        "type": "string",
        "enum": [
          "queued",
          "running",
          "paused",
          "retrying"
        ],
        "title": "JobStatus",
        "description": "Extended job status enumeration."
      },
      "JobStatusResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the request was successful",
            "default": true
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Optional message or description"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          },
          "data": {
            "allOf": [
              {
                "$ref": "#/components/schemas/JobResponse"
              }
            ],
            "description": "Job details"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "JobStatusResponse",
        "description": "Response model for job status queries.",
        "example": {
          "data": {
            "job_id": "job_123",
            "job_type": "document_processing",
            "priority": "normal",
            "progress": {
              "completed_steps": 5,
              "current_step": "Processing page 5",
              "progress_percentage": 50,
              "total_steps": 10
            },
            "status": "running"
          },
          "message": "Job status retrieved successfully",
          "success": true,
          "timestamp": "2024-07-26T18:00:00Z"
        }
      },
      "JobType": {
        "type": "string",
        "enum": [
          "document_processing",
          "image_analysis",
          "batch_processing",
          "embedding_generation",
          "search_indexing",
          "data_export",
          "cleanup"
        ],
        "title": "JobType",
        "description": "Types of background jobs."
      },
      "MMRSearchRequest": {
        "properties": {
          "query": {
            "type": "string",
            "maxLength": 2000,
            "minLength": 1,
            "title": "Query",
            "description": "Search query"
          },
          "top_k": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 50,
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Top K",
            "description": "Number of initial results to retrieve",
            "default": 10
          },
          "diversity_threshold": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Diversity Threshold",
            "description": "MMR diversity threshold",
            "default": 0.7
          },
          "lambda_param": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Lambda Param",
            "description": "MMR lambda parameter for relevance vs diversity balance",
            "default": 0.5
          },
          "document_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Ids",
            "description": "Filter by specific document IDs"
          },
          "include_metadata": {
            "type": "boolean",
            "title": "Include Metadata",
            "description": "Include document metadata in response",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "MMRSearchRequest",
        "description": "Request model for MMR (Maximal Marginal Relevance) search."
      },
      "MMRSearchResponse": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query",
            "description": "Original search query"
          },
          "results": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Results",
            "description": "MMR search results with diversity scores"
          },
          "total_results": {
            "type": "integer",
            "title": "Total Results",
            "description": "Total number of results"
          },
          "diversity_score": {
            "type": "number",
            "title": "Diversity Score",
            "description": "Overall diversity score of results"
          },
          "processing_time": {
            "type": "number",
            "title": "Processing Time",
            "description": "Search processing time in seconds"
          }
        },
        "type": "object",
        "required": [
          "query",
          "results",
          "total_results",
          "diversity_score",
          "processing_time"
        ],
        "title": "MMRSearchResponse",
        "description": "Response model for MMR search."
      },
      "MaterialSearchRequest": {
        "properties": {
          "query_image": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query Image",
            "description": "Base64 encoded image or image URL"
          },
          "query_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query Text",
            "description": "Text description for hybrid search"
          },
          "query_embedding": {
            "anyOf": [
              {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query Embedding",
            "description": "Pre-computed CLIP embedding"
          },
          "search_type": {
            "type": "string",
            "title": "Search Type",
            "description": "Type of search: visual_similarity, semantic_analysis, hybrid, material_properties",
            "default": "hybrid"
          },
          "search_strategy": {
            "type": "string",
            "title": "Search Strategy",
            "description": "Search strategy: comprehensive, fast, accurate",
            "default": "comprehensive"
          },
          "material_types": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Material Types",
            "description": "Filter by material types"
          },
          "confidence_threshold": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Confidence Threshold",
            "description": "Minimum confidence threshold",
            "default": 0.75
          },
          "similarity_threshold": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Similarity Threshold",
            "description": "Minimum similarity threshold",
            "default": 0.7
          },
          "spectral_filters": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Spectral Filters",
            "description": "Spectral property filters"
          },
          "chemical_filters": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chemical Filters",
            "description": "Chemical composition filters"
          },
          "mechanical_filters": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mechanical Filters",
            "description": "Mechanical property filters"
          },
          "thermal_filters": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thermal Filters",
            "description": "Thermal property filters"
          },
          "fusion_weights": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fusion Weights",
            "description": "Weights for combining analysis types"
          },
          "limit": {
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "title": "Limit",
            "description": "Maximum number of results",
            "default": 20
          },
          "offset": {
            "type": "integer",
            "minimum": 0,
            "title": "Offset",
            "description": "Result offset for pagination",
            "default": 0
          },
          "include_analytics": {
            "type": "boolean",
            "title": "Include Analytics",
            "description": "Include search analytics",
            "default": false
          },
          "include_embeddings": {
            "type": "boolean",
            "title": "Include Embeddings",
            "description": "Include embedding vectors in response",
            "default": false
          },
          "enable_clip_embeddings": {
            "type": "boolean",
            "title": "Enable Clip Embeddings",
            "description": "Generate CLIP embeddings",
            "default": true
          },
          "enable_llama_analysis": {
            "type": "boolean",
            "title": "Enable Llama Analysis",
            "description": "Enable LLaMA Vision analysis",
            "default": false
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "User identifier"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id",
            "description": "Workspace identifier"
          },
          "session_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Session Id",
            "description": "Session identifier"
          }
        },
        "type": "object",
        "title": "MaterialSearchRequest",
        "description": "Request model for material-specific visual search."
      },
      "MaterialSearchResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Request success status"
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/MaterialSearchResult"
            },
            "type": "array",
            "title": "Results",
            "description": "Search results"
          },
          "total_results": {
            "type": "integer",
            "title": "Total Results",
            "description": "Total number of results"
          },
          "search_metadata": {
            "type": "object",
            "title": "Search Metadata",
            "description": "Search execution metadata"
          },
          "analytics": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Analytics",
            "description": "Search analytics if requested"
          }
        },
        "type": "object",
        "required": [
          "success",
          "results",
          "total_results",
          "search_metadata"
        ],
        "title": "MaterialSearchResponse",
        "description": "Response model for material visual search."
      },
      "MaterialSearchResult": {
        "properties": {
          "material_id": {
            "type": "string",
            "title": "Material Id",
            "description": "Material identifier"
          },
          "material_name": {
            "type": "string",
            "title": "Material Name",
            "description": "Material name"
          },
          "material_type": {
            "type": "string",
            "title": "Material Type",
            "description": "Material type/category"
          },
          "visual_similarity_score": {
            "type": "number",
            "title": "Visual Similarity Score",
            "description": "Visual similarity score"
          },
          "semantic_relevance_score": {
            "type": "number",
            "title": "Semantic Relevance Score",
            "description": "Semantic relevance score"
          },
          "material_property_score": {
            "type": "number",
            "title": "Material Property Score",
            "description": "Material property matching score"
          },
          "combined_score": {
            "type": "number",
            "title": "Combined Score",
            "description": "Final combined score"
          },
          "confidence_score": {
            "type": "number",
            "title": "Confidence Score",
            "description": "Overall confidence"
          },
          "visual_analysis": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visual Analysis",
            "description": "Visual analysis results"
          },
          "material_properties": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Material Properties",
            "description": "Material property analysis"
          },
          "clip_embedding": {
            "anyOf": [
              {
                "items": {
                  "type": "number"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clip Embedding",
            "description": "CLIP embedding vector"
          },
          "llama_analysis": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Llama Analysis",
            "description": "LLaMA Vision analysis"
          },
          "source": {
            "type": "string",
            "title": "Source",
            "description": "Data source"
          },
          "created_at": {
            "type": "string",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "processing_method": {
            "type": "string",
            "title": "Processing Method",
            "description": "Processing method used"
          },
          "search_rank": {
            "type": "integer",
            "title": "Search Rank",
            "description": "Result ranking"
          }
        },
        "type": "object",
        "required": [
          "material_id",
          "material_name",
          "material_type",
          "visual_similarity_score",
          "semantic_relevance_score",
          "material_property_score",
          "combined_score",
          "confidence_score",
          "source",
          "created_at",
          "processing_method",
          "search_rank"
        ],
        "title": "MaterialSearchResult",
        "description": "Material-specific search result."
      },
      "MetricsSummary": {
        "properties": {
          "word_count": {
            "type": "integer",
            "title": "Word Count",
            "description": "Total word count"
          },
          "character_count": {
            "type": "integer",
            "title": "Character Count",
            "description": "Total character count"
          },
          "page_count": {
            "type": "integer",
            "title": "Page Count",
            "description": "Number of pages"
          },
          "image_count": {
            "type": "integer",
            "title": "Image Count",
            "description": "Number of extracted images",
            "default": 0
          },
          "table_count": {
            "type": "integer",
            "title": "Table Count",
            "description": "Number of extracted tables",
            "default": 0
          },
          "processing_time_seconds": {
            "type": "number",
            "title": "Processing Time Seconds",
            "description": "Processing time in seconds"
          }
        },
        "type": "object",
        "required": [
          "word_count",
          "character_count",
          "page_count",
          "processing_time_seconds"
        ],
        "title": "MetricsSummary",
        "description": "Summary metrics for content analysis."
      },
      "MultiModalAnalysisRequest": {
        "properties": {
          "document_id": {
            "type": "string",
            "title": "Document Id",
            "description": "Document ID to analyze"
          },
          "analysis_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Analysis Types",
            "description": "Types of analysis to perform"
          },
          "include_text_analysis": {
            "type": "boolean",
            "title": "Include Text Analysis",
            "description": "Include text content analysis",
            "default": true
          },
          "include_image_analysis": {
            "type": "boolean",
            "title": "Include Image Analysis",
            "description": "Include image content analysis",
            "default": true
          },
          "include_ocr_analysis": {
            "type": "boolean",
            "title": "Include Ocr Analysis",
            "description": "Include OCR text analysis",
            "default": true
          },
          "include_structure_analysis": {
            "type": "boolean",
            "title": "Include Structure Analysis",
            "description": "Include document structure analysis",
            "default": false
          },
          "ocr_language": {
            "type": "string",
            "title": "Ocr Language",
            "description": "OCR language code",
            "default": "en"
          },
          "ocr_confidence_threshold": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Ocr Confidence Threshold",
            "description": "Minimum OCR confidence",
            "default": 0.5
          },
          "image_analysis_depth": {
            "type": "string",
            "pattern": "^(basic|standard|detailed)$",
            "title": "Image Analysis Depth",
            "description": "Image analysis depth",
            "default": "standard"
          },
          "detect_objects": {
            "type": "boolean",
            "title": "Detect Objects",
            "description": "Detect objects in images",
            "default": true
          },
          "extract_visual_features": {
            "type": "boolean",
            "title": "Extract Visual Features",
            "description": "Extract visual features",
            "default": true
          },
          "enable_material_analysis": {
            "type": "boolean",
            "title": "Enable Material Analysis",
            "description": "Enable material property analysis",
            "default": false
          },
          "material_analysis_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Material Analysis Types",
            "description": "Types of material analysis (spectral, chemical, mechanical, thermal)"
          },
          "enable_clip_embeddings": {
            "type": "boolean",
            "title": "Enable Clip Embeddings",
            "description": "Generate CLIP embeddings for visual similarity",
            "default": false
          },
          "enable_llama_vision": {
            "type": "boolean",
            "title": "Enable Llama Vision",
            "description": "Use LLaMA Vision for material understanding",
            "default": false
          },
          "spectral_analysis": {
            "type": "boolean",
            "title": "Spectral Analysis",
            "description": "Perform spectral analysis on materials",
            "default": false
          },
          "chemical_analysis": {
            "type": "boolean",
            "title": "Chemical Analysis",
            "description": "Perform chemical composition analysis",
            "default": false
          },
          "mechanical_analysis": {
            "type": "boolean",
            "title": "Mechanical Analysis",
            "description": "Perform mechanical property analysis",
            "default": false
          },
          "thermal_analysis": {
            "type": "boolean",
            "title": "Thermal Analysis",
            "description": "Perform thermal property analysis",
            "default": false
          },
          "multimodal_llm_model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Multimodal Llm Model",
            "description": "Specific multi-modal LLM model to use"
          },
          "cross_modal_analysis": {
            "type": "boolean",
            "title": "Cross Modal Analysis",
            "description": "Analyze relationships between different modalities",
            "default": false
          },
          "analysis_depth": {
            "type": "string",
            "pattern": "^(basic|standard|detailed|comprehensive)$",
            "title": "Analysis Depth",
            "description": "Overall analysis depth",
            "default": "standard"
          },
          "prioritize_materials": {
            "type": "boolean",
            "title": "Prioritize Materials",
            "description": "Prioritize material-related content in analysis",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "document_id",
          "analysis_types"
        ],
        "title": "MultiModalAnalysisRequest",
        "description": "Request model for multi-modal document analysis with material-specific capabilities."
      },
      "MultiModalAnalysisResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the request was successful",
            "default": true
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Optional message or description"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          },
          "document_id": {
            "type": "string",
            "title": "Document Id",
            "description": "Analyzed document ID"
          },
          "document_name": {
            "type": "string",
            "title": "Document Name",
            "description": "Document name"
          },
          "text_analysis": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text Analysis",
            "description": "Text analysis results"
          },
          "image_analysis": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Analysis",
            "description": "Image analysis results"
          },
          "ocr_analysis": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ocr Analysis",
            "description": "OCR analysis results"
          },
          "structure_analysis": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Structure Analysis",
            "description": "Document structure analysis"
          },
          "material_analysis": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Material Analysis",
            "description": "Comprehensive material analysis results"
          },
          "spectral_analysis": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Spectral Analysis",
            "description": "Spectral analysis results"
          },
          "chemical_analysis": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chemical Analysis",
            "description": "Chemical composition analysis"
          },
          "mechanical_analysis": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mechanical Analysis",
            "description": "Mechanical property analysis"
          },
          "thermal_analysis": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thermal Analysis",
            "description": "Thermal property analysis"
          },
          "clip_embeddings": {
            "anyOf": [
              {
                "items": {
                  "items": {
                    "type": "number"
                  },
                  "type": "array"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Clip Embeddings",
            "description": "Generated CLIP embeddings for visual similarity"
          },
          "llama_vision_analysis": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Llama Vision Analysis",
            "description": "LLaMA Vision material understanding results"
          },
          "multimodal_insights": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Multimodal Insights",
            "description": "Combined multi-modal insights"
          },
          "cross_modal_insights": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cross Modal Insights",
            "description": "Cross-modal relationship insights"
          },
          "content_summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Summary",
            "description": "Overall content summary"
          },
          "material_summary": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Material Summary",
            "description": "Material-focused analysis summary"
          },
          "analysis_time_ms": {
            "type": "number",
            "title": "Analysis Time Ms",
            "description": "Total analysis time"
          },
          "models_used": {
            "additionalProperties": {
              "type": "string"
            },
            "type": "object",
            "title": "Models Used",
            "description": "Models used for analysis"
          },
          "material_analysis_enabled": {
            "type": "boolean",
            "title": "Material Analysis Enabled",
            "description": "Whether material analysis was performed",
            "default": false
          },
          "total_pages": {
            "type": "integer",
            "title": "Total Pages",
            "description": "Total pages analyzed"
          },
          "total_images": {
            "type": "integer",
            "title": "Total Images",
            "description": "Total images analyzed"
          },
          "total_text_chunks": {
            "type": "integer",
            "title": "Total Text Chunks",
            "description": "Total text chunks analyzed"
          },
          "total_materials_identified": {
            "type": "integer",
            "title": "Total Materials Identified",
            "description": "Total materials identified in analysis",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "document_id",
          "document_name",
          "analysis_time_ms",
          "total_pages",
          "total_images",
          "total_text_chunks"
        ],
        "title": "MultiModalAnalysisResponse",
        "description": "Response model for multi-modal analysis."
      },
      "ProcessingOptions": {
        "properties": {
          "extract_images": {
            "type": "boolean",
            "title": "Extract Images",
            "description": "Whether to extract images",
            "default": true
          },
          "extract_tables": {
            "type": "boolean",
            "title": "Extract Tables",
            "description": "Whether to extract tables",
            "default": true
          },
          "page_number": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Page Number",
            "description": "Process specific page only"
          },
          "timeout_seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout Seconds",
            "description": "Processing timeout",
            "default": 300
          },
          "quality": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "^(fast|standard|high)$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quality",
            "description": "Processing quality",
            "default": "standard"
          },
          "language": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language",
            "description": "Document language hint",
            "default": "auto"
          }
        },
        "type": "object",
        "title": "ProcessingOptions",
        "description": "Configuration options for document processing."
      },
      "ProcessingStatus": {
        "type": "string",
        "enum": [
          "pending",
          "processing",
          "completed",
          "failed",
          "cancelled"
        ],
        "title": "ProcessingStatus",
        "description": "Status enumeration for processing jobs."
      },
      "RelatedDocumentsResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the request was successful",
            "default": true
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Optional message or description"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          },
          "source_document_id": {
            "type": "string",
            "title": "Source Document Id",
            "description": "ID of the source document"
          },
          "related_documents": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Related Documents",
            "description": "List of related documents with similarity scores"
          },
          "total_found": {
            "type": "integer",
            "title": "Total Found",
            "description": "Total number of related documents found"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata",
            "description": "Search metadata and parameters"
          }
        },
        "type": "object",
        "required": [
          "source_document_id",
          "total_found"
        ],
        "title": "RelatedDocumentsResponse",
        "description": "Response model for finding related documents.",
        "example": {
          "metadata": {
            "analysis_method": "content_summary_similarity",
            "similarity_threshold": 0.7
          },
          "related_documents": [
            {
              "content_preview": "This document discusses similar topics...",
              "document_id": "doc_456",
              "metadata": {
                "author": "Dr. Smith",
                "date": "2024-07-26"
              },
              "similarity_score": 0.85,
              "title": "Related Research Paper"
            }
          ],
          "source_document_id": "doc_123",
          "success": true,
          "timestamp": "2024-07-26T18:00:00Z",
          "total_found": 3
        }
      },
      "SearchResult": {
        "properties": {
          "document_id": {
            "type": "string",
            "title": "Document Id",
            "description": "Source document ID"
          },
          "document_name": {
            "type": "string",
            "title": "Document Name",
            "description": "Document name"
          },
          "chunk_id": {
            "type": "string",
            "title": "Chunk Id",
            "description": "Matching chunk ID"
          },
          "content": {
            "type": "string",
            "title": "Content",
            "description": "Matching content snippet"
          },
          "similarity_score": {
            "type": "number",
            "title": "Similarity Score",
            "description": "Similarity score (0-1)"
          },
          "keyword_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keyword Score",
            "description": "Keyword matching score"
          },
          "combined_score": {
            "type": "number",
            "title": "Combined Score",
            "description": "Final combined relevance score"
          },
          "multimodal_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Multimodal Score",
            "description": "Multi-modal relevance score (0-1)"
          },
          "ocr_confidence": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ocr Confidence",
            "description": "OCR extraction confidence (0-1)"
          },
          "page_number": {
            "type": "integer",
            "title": "Page Number",
            "description": "Source page number"
          },
          "context_before": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context Before",
            "description": "Text before the match"
          },
          "context_after": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context After",
            "description": "Text after the match"
          },
          "content_type": {
            "type": "string",
            "title": "Content Type",
            "description": "Content type (text, image, mixed)",
            "default": "text"
          },
          "ocr_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ocr Text",
            "description": "OCR-extracted text content"
          },
          "associated_images": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Associated Images",
            "description": "Associated image information"
          },
          "image_analysis": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Analysis",
            "description": "Image analysis results"
          },
          "highlighted_content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Highlighted Content",
            "description": "Content with search terms highlighted"
          },
          "document_tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Document Tags",
            "description": "Document tags"
          },
          "chunk_metadata": {
            "type": "object",
            "title": "Chunk Metadata",
            "description": "Chunk metadata"
          }
        },
        "type": "object",
        "required": [
          "document_id",
          "document_name",
          "chunk_id",
          "content",
          "similarity_score",
          "combined_score",
          "page_number"
        ],
        "title": "SearchResult",
        "description": "Individual search result."
      },
      "SemanticAnalysisAPIRequest": {
        "properties": {
          "image_data": {
            "type": "string",
            "minLength": 1,
            "title": "Image Data",
            "description": "Base64 encoded image data or image URL"
          },
          "analysis_type": {
            "type": "string",
            "title": "Analysis Type",
            "description": "Type of analysis to perform",
            "default": "material_identification"
          },
          "prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt",
            "description": "Custom analysis prompt (optional)"
          },
          "options": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Options",
            "description": "Additional analysis options"
          }
        },
        "type": "object",
        "required": [
          "image_data"
        ],
        "title": "SemanticAnalysisAPIRequest",
        "description": "API request model for semantic analysis endpoint."
      },
      "SemanticAnalysisAPIResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the request was successful",
            "default": true
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Optional message or description"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          },
          "analysis": {
            "type": "string",
            "title": "Analysis",
            "description": "Generated semantic description"
          },
          "confidence": {
            "type": "number",
            "title": "Confidence",
            "description": "Analysis confidence score (0.0-1.0)"
          },
          "model_used": {
            "type": "string",
            "title": "Model Used",
            "description": "AI model used for analysis"
          },
          "processing_time_ms": {
            "type": "integer",
            "title": "Processing Time Ms",
            "description": "Processing time in milliseconds"
          },
          "metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata",
            "description": "Additional analysis metadata"
          }
        },
        "type": "object",
        "required": [
          "analysis",
          "confidence",
          "model_used",
          "processing_time_ms"
        ],
        "title": "SemanticAnalysisAPIResponse",
        "description": "API response model for semantic analysis endpoint."
      },
      "SemanticSearchRequest": {
        "properties": {
          "query": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Query",
            "description": "Search query for semantic matching"
          },
          "document_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Ids",
            "description": "Specific document IDs to search (if None, searches all)"
          },
          "similarity_threshold": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Similarity Threshold",
            "description": "Minimum similarity score threshold",
            "default": 0.7
          },
          "max_results": {
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "title": "Max Results",
            "description": "Maximum number of results to return",
            "default": 20
          },
          "include_metadata": {
            "type": "boolean",
            "title": "Include Metadata",
            "description": "Whether to include result metadata",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "SemanticSearchRequest",
        "description": "Request model for semantic search across documents.",
        "example": {
          "document_ids": [
            "doc_123",
            "doc_456"
          ],
          "include_metadata": true,
          "max_results": 10,
          "query": "machine learning algorithms",
          "similarity_threshold": 0.75
        }
      },
      "SemanticSearchResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the request was successful",
            "default": true
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Optional message or description"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          },
          "query": {
            "type": "string",
            "title": "Query",
            "description": "Original search query"
          },
          "results": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Results",
            "description": "Search results with similarity scores"
          },
          "total_results": {
            "type": "integer",
            "title": "Total Results",
            "description": "Total number of results found"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata",
            "description": "Search metadata and statistics"
          }
        },
        "type": "object",
        "required": [
          "query",
          "total_results"
        ],
        "title": "SemanticSearchResponse",
        "description": "Response model for semantic search operations.",
        "example": {
          "metadata": {
            "search_time": 1.2,
            "searched_documents": 10,
            "similarity_threshold": 0.75
          },
          "query": "machine learning algorithms",
          "results": [
            {
              "content": "Machine learning algorithms are...",
              "document_id": "doc_123",
              "metadata": {
                "page": 1,
                "section": "Introduction"
              },
              "score": 0.85
            }
          ],
          "success": true,
          "timestamp": "2024-07-26T18:00:00Z",
          "total_results": 5
        }
      },
      "SimilarDocument": {
        "properties": {
          "document_id": {
            "type": "string",
            "title": "Document Id",
            "description": "Document ID"
          },
          "document_name": {
            "type": "string",
            "title": "Document Name",
            "description": "Document name"
          },
          "similarity_score": {
            "type": "number",
            "title": "Similarity Score",
            "description": "Similarity score (0-1)"
          },
          "page_count": {
            "type": "integer",
            "title": "Page Count",
            "description": "Number of pages"
          },
          "word_count": {
            "type": "integer",
            "title": "Word Count",
            "description": "Word count"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "description": "Document tags"
          },
          "created_at": {
            "type": "string",
            "title": "Created At",
            "description": "Creation timestamp"
          },
          "matching_topics": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Matching Topics",
            "description": "Common topics/themes"
          },
          "content_overlap": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Overlap",
            "description": "Content overlap percentage"
          }
        },
        "type": "object",
        "required": [
          "document_id",
          "document_name",
          "similarity_score",
          "page_count",
          "word_count",
          "created_at"
        ],
        "title": "SimilarDocument",
        "description": "Similar document result."
      },
      "SimilarImage": {
        "properties": {
          "image_id": {
            "type": "string",
            "title": "Image Id",
            "description": "Image identifier"
          },
          "document_id": {
            "type": "string",
            "title": "Document Id",
            "description": "Source document ID"
          },
          "document_name": {
            "type": "string",
            "title": "Document Name",
            "description": "Source document name"
          },
          "page_number": {
            "type": "integer",
            "title": "Page Number",
            "description": "Page number where image appears"
          },
          "similarity_score": {
            "type": "number",
            "title": "Similarity Score",
            "description": "Visual similarity score (0-1)"
          },
          "content_similarity": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Similarity",
            "description": "Content/description similarity"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Image description"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "description": "Image tags"
          },
          "dimensions": {
            "additionalProperties": {
              "type": "integer"
            },
            "type": "object",
            "title": "Dimensions",
            "description": "Image dimensions"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url",
            "description": "URL to access the image"
          }
        },
        "type": "object",
        "required": [
          "image_id",
          "document_id",
          "document_name",
          "page_number",
          "similarity_score",
          "dimensions"
        ],
        "title": "SimilarImage",
        "description": "Similar image search result."
      },
      "SimilaritySearchRequest": {
        "properties": {
          "reference_document_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Document Id",
            "description": "Find documents similar to this one"
          },
          "reference_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Text",
            "description": "Find documents similar to this text"
          },
          "limit": {
            "type": "integer",
            "maximum": 50,
            "minimum": 1,
            "title": "Limit",
            "description": "Maximum number of similar documents",
            "default": 10
          },
          "similarity_threshold": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Similarity Threshold",
            "description": "Minimum similarity score",
            "default": 0.5
          },
          "exclude_self": {
            "type": "boolean",
            "title": "Exclude Self",
            "description": "Exclude reference document from results",
            "default": true
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Filter by document tags"
          },
          "document_types": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Types",
            "description": "Filter by document types"
          }
        },
        "type": "object",
        "title": "SimilaritySearchRequest",
        "description": "Request model for similarity-based document search."
      },
      "SimilaritySearchResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the request was successful",
            "default": true
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Optional message or description"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          },
          "reference_info": {
            "type": "object",
            "title": "Reference Info",
            "description": "Information about the reference"
          },
          "similar_documents": {
            "items": {
              "$ref": "#/components/schemas/SimilarDocument"
            },
            "type": "array",
            "title": "Similar Documents",
            "description": "Similar documents found"
          },
          "total_found": {
            "type": "integer",
            "title": "Total Found",
            "description": "Total number of similar documents"
          },
          "search_time_ms": {
            "type": "number",
            "title": "Search Time Ms",
            "description": "Search execution time"
          }
        },
        "type": "object",
        "required": [
          "reference_info",
          "similar_documents",
          "total_found",
          "search_time_ms"
        ],
        "title": "SimilaritySearchResponse",
        "description": "Response model for similarity search."
      },
      "SourceCitation": {
        "properties": {
          "document_id": {
            "type": "string",
            "title": "Document Id",
            "description": "Source document ID"
          },
          "document_name": {
            "type": "string",
            "title": "Document Name",
            "description": "Document name"
          },
          "chunk_id": {
            "type": "string",
            "title": "Chunk Id",
            "description": "Source chunk ID"
          },
          "page_number": {
            "type": "integer",
            "title": "Page Number",
            "description": "Page number"
          },
          "relevance_score": {
            "type": "number",
            "title": "Relevance Score",
            "description": "Relevance to the question"
          },
          "excerpt": {
            "type": "string",
            "title": "Excerpt",
            "description": "Relevant text excerpt"
          },
          "content_type": {
            "type": "string",
            "title": "Content Type",
            "description": "Content type (text, image, mixed)",
            "default": "text"
          },
          "ocr_excerpt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ocr Excerpt",
            "description": "OCR-extracted text excerpt"
          },
          "image_reference": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Reference",
            "description": "Associated image information"
          },
          "multimodal_confidence": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Multimodal Confidence",
            "description": "Multi-modal analysis confidence"
          }
        },
        "type": "object",
        "required": [
          "document_id",
          "document_name",
          "chunk_id",
          "page_number",
          "relevance_score",
          "excerpt"
        ],
        "title": "SourceCitation",
        "description": "Source citation for RAG responses."
      },
      "SuccessResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Always true for success responses",
            "default": true
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Optional message or description"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          },
          "data": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data",
            "description": "Response data payload"
          }
        },
        "type": "object",
        "title": "SuccessResponse",
        "description": "Success response model with optional data payload.",
        "example": {
          "data": {
            "count": 42,
            "result": "example_value"
          },
          "message": "Operation completed successfully",
          "success": true,
          "timestamp": "2024-07-26T18:00:00Z"
        }
      },
      "TableInfo": {
        "properties": {
          "table_id": {
            "type": "string",
            "title": "Table Id",
            "description": "Unique table identifier"
          },
          "page_number": {
            "type": "integer",
            "title": "Page Number",
            "description": "Source page number"
          },
          "rows": {
            "type": "integer",
            "title": "Rows",
            "description": "Number of rows"
          },
          "columns": {
            "type": "integer",
            "title": "Columns",
            "description": "Number of columns"
          },
          "csv_data": {
            "type": "string",
            "title": "Csv Data",
            "description": "Table data in CSV format"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "AI-generated table description"
          }
        },
        "type": "object",
        "required": [
          "table_id",
          "page_number",
          "rows",
          "columns",
          "csv_data"
        ],
        "title": "TableInfo",
        "description": "Information about extracted tables."
      },
      "URLInfo": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url",
            "description": "Source URL"
          },
          "content_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Type",
            "description": "Detected content type"
          },
          "size_bytes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Size Bytes",
            "description": "Content size in bytes"
          },
          "last_modified": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Modified",
            "description": "Last modified timestamp"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "URLInfo",
        "description": "Information about URL-based processing."
      },
      "URLProcessRequest": {
        "properties": {
          "url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Url",
            "description": "URL to PDF document"
          },
          "async_processing": {
            "type": "boolean",
            "title": "Async Processing",
            "description": "Whether to process asynchronously",
            "default": false
          },
          "options": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ProcessingOptions"
              }
            ],
            "description": "Processing configuration"
          },
          "document_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Name",
            "description": "Custom document name"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags",
            "description": "Document tags for organization"
          },
          "metadata": {
            "type": "object",
            "title": "Metadata",
            "description": "Additional metadata"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "URLProcessRequest",
        "description": "Request model for processing PDF from URL.",
        "example": {
          "async_processing": false,
          "document_name": "Sample Document",
          "options": {
            "extract_images": true,
            "extract_tables": true,
            "quality": "standard"
          },
          "tags": [
            "research",
            "analysis"
          ],
          "url": "https://example.com/document.pdf"
        }
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "app__api__rag_routes__DocumentListResponse": {
        "properties": {
          "documents": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Documents",
            "description": "List of documents"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "description": "Total number of documents"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Page size"
          }
        },
        "type": "object",
        "required": [
          "documents",
          "total_count",
          "page",
          "page_size"
        ],
        "title": "DocumentListResponse",
        "description": "Response model for document listing."
      },
      "app__api__rag_routes__HealthCheckResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Health status"
          },
          "services": {
            "additionalProperties": {
              "type": "object"
            },
            "type": "object",
            "title": "Services",
            "description": "Service health details"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Health check timestamp"
          }
        },
        "type": "object",
        "required": [
          "status",
          "services",
          "timestamp"
        ],
        "title": "HealthCheckResponse",
        "description": "Response model for RAG health check."
      },
      "app__api__rag_routes__QueryRequest": {
        "properties": {
          "query": {
            "type": "string",
            "maxLength": 2000,
            "minLength": 1,
            "title": "Query",
            "description": "Query text"
          },
          "top_k": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 20,
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Top K",
            "description": "Number of top results to retrieve",
            "default": 5
          },
          "similarity_threshold": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Similarity Threshold",
            "description": "Similarity threshold",
            "default": 0.7
          },
          "include_metadata": {
            "type": "boolean",
            "title": "Include Metadata",
            "description": "Include document metadata in response",
            "default": true
          },
          "enable_reranking": {
            "type": "boolean",
            "title": "Enable Reranking",
            "description": "Enable result reranking",
            "default": true
          },
          "document_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Ids",
            "description": "Filter by specific document IDs"
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "QueryRequest",
        "description": "Request model for RAG queries."
      },
      "app__api__rag_routes__QueryResponse": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query",
            "description": "Original query"
          },
          "answer": {
            "type": "string",
            "title": "Answer",
            "description": "Generated answer"
          },
          "sources": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Sources",
            "description": "Source documents and chunks"
          },
          "confidence_score": {
            "type": "number",
            "title": "Confidence Score",
            "description": "Confidence score for the answer"
          },
          "processing_time": {
            "type": "number",
            "title": "Processing Time",
            "description": "Query processing time in seconds"
          },
          "retrieved_chunks": {
            "type": "integer",
            "title": "Retrieved Chunks",
            "description": "Number of chunks retrieved"
          }
        },
        "type": "object",
        "required": [
          "query",
          "answer",
          "sources",
          "confidence_score",
          "processing_time",
          "retrieved_chunks"
        ],
        "title": "QueryResponse",
        "description": "Response model for RAG queries."
      },
      "app__api__rag_routes__SearchRequest": {
        "properties": {
          "query": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Query",
            "description": "Search query"
          },
          "search_type": {
            "type": "string",
            "pattern": "^(semantic|hybrid|keyword)$",
            "title": "Search Type",
            "description": "Search type",
            "default": "semantic"
          },
          "top_k": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 50,
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Top K",
            "description": "Number of results to return",
            "default": 10
          },
          "similarity_threshold": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Similarity Threshold",
            "description": "Similarity threshold",
            "default": 0.6
          },
          "document_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Ids",
            "description": "Filter by document IDs"
          },
          "include_content": {
            "type": "boolean",
            "title": "Include Content",
            "description": "Include chunk content in results",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "SearchRequest",
        "description": "Request model for semantic search."
      },
      "app__api__rag_routes__SearchResponse": {
        "properties": {
          "query": {
            "type": "string",
            "title": "Query",
            "description": "Original search query"
          },
          "results": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Results",
            "description": "Search results"
          },
          "total_results": {
            "type": "integer",
            "title": "Total Results",
            "description": "Total number of results"
          },
          "search_type": {
            "type": "string",
            "title": "Search Type",
            "description": "Type of search performed"
          },
          "processing_time": {
            "type": "number",
            "title": "Processing Time",
            "description": "Search processing time"
          }
        },
        "type": "object",
        "required": [
          "query",
          "results",
          "total_results",
          "search_type",
          "processing_time"
        ],
        "title": "SearchResponse",
        "description": "Response model for semantic search."
      },
      "app__schemas__common__HealthCheckResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status",
            "description": "Service health status"
          },
          "timestamp": {
            "type": "string",
            "title": "Timestamp",
            "description": "Health check timestamp"
          },
          "service": {
            "type": "string",
            "title": "Service",
            "description": "Service name"
          },
          "version": {
            "type": "string",
            "title": "Version",
            "description": "Service version"
          },
          "dependencies": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "boolean"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dependencies",
            "description": "Status of service dependencies"
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error",
            "description": "Error message if unhealthy"
          }
        },
        "type": "object",
        "required": [
          "status",
          "timestamp",
          "service",
          "version"
        ],
        "title": "HealthCheckResponse",
        "description": "Document service health check response model.",
        "example": {
          "dependencies": {
            "job_storage": true,
            "pdf_processor": true,
            "temp_directory": true
          },
          "service": "Document Processing API",
          "status": "healthy",
          "timestamp": "2024-07-26T18:00:00Z",
          "version": "1.0.0"
        }
      },
      "app__schemas__documents__DocumentListResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the request was successful",
            "default": true
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Optional message or description"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          },
          "documents": {
            "items": {
              "$ref": "#/components/schemas/DocumentListItem"
            },
            "type": "array",
            "title": "Documents",
            "description": "List of documents"
          },
          "total_count": {
            "type": "integer",
            "title": "Total Count",
            "description": "Total number of documents"
          },
          "page": {
            "type": "integer",
            "title": "Page",
            "description": "Current page number"
          },
          "page_size": {
            "type": "integer",
            "title": "Page Size",
            "description": "Items per page"
          }
        },
        "type": "object",
        "required": [
          "documents",
          "total_count",
          "page",
          "page_size"
        ],
        "title": "DocumentListResponse",
        "description": "Response model for document listing.",
        "example": {
          "documents": [
            {
              "created_at": "2024-07-26T18:00:00Z",
              "document_id": "doc_123",
              "document_name": "Research Paper 2024",
              "file_size": 2048576,
              "has_embeddings": true,
              "page_count": 15,
              "processing_time": 45.2,
              "status": "completed",
              "tags": [
                "research",
                "ai"
              ],
              "updated_at": "2024-07-26T18:05:00Z",
              "word_count": 5000
            }
          ],
          "page": 1,
          "page_size": 20,
          "success": true,
          "timestamp": "2024-07-26T18:00:00Z",
          "total_count": 1
        }
      },
      "app__schemas__images__ImageSearchRequest": {
        "properties": {
          "query_image_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query Image Id",
            "description": "Find images similar to this one"
          },
          "query_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query Description",
            "description": "Find images matching this description"
          },
          "limit": {
            "type": "integer",
            "maximum": 50,
            "minimum": 1,
            "title": "Limit",
            "description": "Maximum number of results",
            "default": 10
          },
          "similarity_threshold": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Similarity Threshold",
            "description": "Minimum similarity score",
            "default": 0.7
          },
          "document_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Ids",
            "description": "Limit search to specific documents"
          },
          "image_types": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Types",
            "description": "Filter by image types (diagram, photo, etc.)"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Filter by image tags"
          }
        },
        "type": "object",
        "title": "ImageSearchRequest",
        "description": "Request model for image similarity search.",
        "example": {
          "image_types": [
            "diagram",
            "chart"
          ],
          "limit": 15,
          "query_description": "neural network diagram",
          "similarity_threshold": 0.8,
          "tags": [
            "ai",
            "machine learning"
          ]
        }
      },
      "app__schemas__images__ImageSearchResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the request was successful",
            "default": true
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Optional message or description"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          },
          "query_info": {
            "type": "object",
            "title": "Query Info",
            "description": "Information about the search query"
          },
          "similar_images": {
            "items": {
              "$ref": "#/components/schemas/SimilarImage"
            },
            "type": "array",
            "title": "Similar Images",
            "description": "Similar images found"
          },
          "total_found": {
            "type": "integer",
            "title": "Total Found",
            "description": "Total number of similar images"
          },
          "search_time_ms": {
            "type": "number",
            "title": "Search Time Ms",
            "description": "Search execution time"
          }
        },
        "type": "object",
        "required": [
          "query_info",
          "similar_images",
          "total_found",
          "search_time_ms"
        ],
        "title": "ImageSearchResponse",
        "description": "Response model for image search.",
        "example": {
          "query_info": {
            "query": "neural network diagram",
            "type": "description"
          },
          "search_time_ms": 245.7,
          "similar_images": [
            {
              "description": "Convolutional neural network architecture diagram",
              "dimensions": {
                "height": 600,
                "width": 800
              },
              "document_id": "doc_123",
              "document_name": "Deep Learning Paper",
              "image_id": "img_789",
              "page_number": 5,
              "similarity_score": 0.92,
              "tags": [
                "cnn",
                "architecture",
                "diagram"
              ]
            }
          ],
          "success": true,
          "timestamp": "2024-07-26T18:00:00Z",
          "total_found": 8
        }
      },
      "app__schemas__search__ImageSearchRequest": {
        "properties": {
          "query": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Query",
            "description": "Image search query"
          },
          "document_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Ids",
            "description": "Limit search to specific documents"
          },
          "limit": {
            "type": "integer",
            "maximum": 50,
            "minimum": 1,
            "title": "Limit",
            "description": "Maximum number of results",
            "default": 10
          },
          "similarity_threshold": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Similarity Threshold",
            "description": "Minimum similarity score",
            "default": 0.6
          },
          "include_ocr_text": {
            "type": "boolean",
            "title": "Include Ocr Text",
            "description": "Include OCR-extracted text in search",
            "default": true
          },
          "ocr_confidence_threshold": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Ocr Confidence Threshold",
            "description": "Minimum OCR confidence threshold",
            "default": 0.5
          },
          "visual_similarity_threshold": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Visual Similarity Threshold",
            "description": "Minimum visual similarity threshold",
            "default": 0.75
          },
          "search_type": {
            "type": "string",
            "pattern": "^(visual_similarity|semantic_analysis|hybrid|material_properties)$",
            "title": "Search Type",
            "description": "Type of visual search",
            "default": "visual_similarity"
          },
          "analysis_depth": {
            "type": "string",
            "pattern": "^(basic|standard|detailed)$",
            "title": "Analysis Depth",
            "description": "Level of image analysis",
            "default": "standard"
          },
          "include_visual_features": {
            "type": "boolean",
            "title": "Include Visual Features",
            "description": "Include visual feature analysis",
            "default": true
          },
          "image_analysis_model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Analysis Model",
            "description": "Specific image analysis model to use"
          },
          "material_filters": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Material Filters",
            "description": "Material property filters"
          },
          "material_types": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Material Types",
            "description": "Filter by specific material types"
          },
          "confidence_threshold": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Confidence Threshold",
            "description": "Minimum material analysis confidence"
          },
          "spectral_filters": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Spectral Filters",
            "description": "Spectral analysis filters"
          },
          "chemical_filters": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Chemical Filters",
            "description": "Chemical composition filters"
          },
          "mechanical_filters": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mechanical Filters",
            "description": "Mechanical property filters"
          },
          "fusion_weights": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "number"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fusion Weights",
            "description": "Weights for combining different analysis types"
          },
          "enable_clip_embeddings": {
            "type": "boolean",
            "title": "Enable Clip Embeddings",
            "description": "Enable CLIP embedding generation for visual similarity",
            "default": true
          },
          "enable_llama_analysis": {
            "type": "boolean",
            "title": "Enable Llama Analysis",
            "description": "Enable LLaMA Vision analysis for material properties",
            "default": false
          },
          "include_analytics": {
            "type": "boolean",
            "title": "Include Analytics",
            "description": "Include search analytics in response",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "ImageSearchRequest",
        "description": "Request model for image-based search with material-specific filtering."
      },
      "app__schemas__search__ImageSearchResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the request was successful",
            "default": true
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Optional message or description"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          },
          "query": {
            "type": "string",
            "title": "Query",
            "description": "Original search query"
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/ImageSearchResult"
            },
            "type": "array",
            "title": "Results",
            "description": "Image search results"
          },
          "total_found": {
            "type": "integer",
            "title": "Total Found",
            "description": "Total number of matching images"
          },
          "search_time_ms": {
            "type": "number",
            "title": "Search Time Ms",
            "description": "Search execution time in milliseconds"
          },
          "analysis_depth": {
            "type": "string",
            "title": "Analysis Depth",
            "description": "Level of analysis performed"
          },
          "ocr_enabled": {
            "type": "boolean",
            "title": "Ocr Enabled",
            "description": "Whether OCR was enabled"
          }
        },
        "type": "object",
        "required": [
          "query",
          "results",
          "total_found",
          "search_time_ms",
          "analysis_depth",
          "ocr_enabled"
        ],
        "title": "ImageSearchResponse",
        "description": "Response model for image search operations."
      },
      "app__schemas__search__QueryRequest": {
        "properties": {
          "question": {
            "type": "string",
            "maxLength": 2000,
            "minLength": 1,
            "title": "Question",
            "description": "Question to answer"
          },
          "context_documents": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context Documents",
            "description": "Specific documents to use as context"
          },
          "context_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Context Tags",
            "description": "Filter context by tags"
          },
          "max_context_chunks": {
            "type": "integer",
            "maximum": 20,
            "minimum": 1,
            "title": "Max Context Chunks",
            "description": "Maximum context chunks to retrieve",
            "default": 5
          },
          "temperature": {
            "type": "number",
            "maximum": 2,
            "minimum": 0,
            "title": "Temperature",
            "description": "Response creativity (0=focused, 2=creative)",
            "default": 0.7
          },
          "max_tokens": {
            "type": "integer",
            "maximum": 2000,
            "minimum": 50,
            "title": "Max Tokens",
            "description": "Maximum response length",
            "default": 500
          },
          "include_image_context": {
            "type": "boolean",
            "title": "Include Image Context",
            "description": "Include image analysis in context retrieval",
            "default": false
          },
          "include_ocr_context": {
            "type": "boolean",
            "title": "Include Ocr Context",
            "description": "Include OCR-extracted text in context",
            "default": true
          },
          "multimodal_llm_model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Multimodal Llm Model",
            "description": "Specific multi-modal LLM model to use"
          },
          "image_analysis_depth": {
            "type": "string",
            "pattern": "^(basic|standard|detailed)$",
            "title": "Image Analysis Depth",
            "description": "Level of image analysis",
            "default": "standard"
          },
          "include_sources": {
            "type": "boolean",
            "title": "Include Sources",
            "description": "Include source citations in response",
            "default": true
          },
          "include_confidence": {
            "type": "boolean",
            "title": "Include Confidence",
            "description": "Include confidence score",
            "default": true
          },
          "include_image_references": {
            "type": "boolean",
            "title": "Include Image References",
            "description": "Include image references in response",
            "default": false
          },
          "response_format": {
            "type": "string",
            "pattern": "^(text|markdown|json)$",
            "title": "Response Format",
            "description": "Response format",
            "default": "markdown"
          }
        },
        "type": "object",
        "required": [
          "question"
        ],
        "title": "QueryRequest",
        "description": "Request model for RAG-based question answering."
      },
      "app__schemas__search__QueryResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the request was successful",
            "default": true
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Optional message or description"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          },
          "question": {
            "type": "string",
            "title": "Question",
            "description": "Original question"
          },
          "answer": {
            "type": "string",
            "title": "Answer",
            "description": "Generated answer"
          },
          "confidence_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confidence Score",
            "description": "Answer confidence (0-1)"
          },
          "completeness_score": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completeness Score",
            "description": "Answer completeness (0-1)"
          },
          "multimodal_confidence": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Multimodal Confidence",
            "description": "Multi-modal analysis confidence (0-1)"
          },
          "sources": {
            "items": {
              "$ref": "#/components/schemas/SourceCitation"
            },
            "type": "array",
            "title": "Sources",
            "description": "Source citations"
          },
          "context_used": {
            "type": "integer",
            "title": "Context Used",
            "description": "Number of context chunks used"
          },
          "image_context_used": {
            "type": "integer",
            "title": "Image Context Used",
            "description": "Number of image contexts used",
            "default": 0
          },
          "image_references": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Image References",
            "description": "Referenced images in response"
          },
          "multimodal_analysis": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Multimodal Analysis",
            "description": "Multi-modal analysis results"
          },
          "processing_time_ms": {
            "type": "number",
            "title": "Processing Time Ms",
            "description": "Query processing time"
          },
          "model_used": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Used",
            "description": "AI model used for generation"
          },
          "multimodal_model_used": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Multimodal Model Used",
            "description": "Multi-modal model used for analysis"
          }
        },
        "type": "object",
        "required": [
          "question",
          "answer",
          "context_used",
          "processing_time_ms"
        ],
        "title": "QueryResponse",
        "description": "Response model for RAG-based queries.",
        "example": {
          "answer": "Transformer architectures offer several key benefits:\n\n1. **Parallel Processing**: Unlike RNNs...",
          "completeness_score": 0.88,
          "confidence_score": 0.92,
          "context_used": 5,
          "processing_time_ms": 1250.5,
          "question": "What are the main benefits of transformer architectures?",
          "sources": [
            {
              "chunk_id": "chunk_456",
              "document_id": "doc_123",
              "document_name": "Attention Is All You Need",
              "excerpt": "The Transformer allows for significantly more parallelization...",
              "page_number": 3,
              "relevance_score": 0.95
            }
          ],
          "success": true,
          "timestamp": "2024-07-26T18:00:00Z"
        }
      },
      "app__schemas__search__SearchRequest": {
        "properties": {
          "query": {
            "type": "string",
            "maxLength": 1000,
            "minLength": 1,
            "title": "Query",
            "description": "Search query"
          },
          "document_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Document Ids",
            "description": "Limit search to specific documents"
          },
          "tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tags",
            "description": "Filter by document tags"
          },
          "limit": {
            "type": "integer",
            "maximum": 100,
            "minimum": 1,
            "title": "Limit",
            "description": "Maximum number of results",
            "default": 10
          },
          "similarity_threshold": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Similarity Threshold",
            "description": "Minimum similarity score",
            "default": 0.7
          },
          "search_type": {
            "type": "string",
            "pattern": "^(semantic|keyword|hybrid|multimodal)$",
            "title": "Search Type",
            "description": "Type of search",
            "default": "hybrid"
          },
          "include_images": {
            "type": "boolean",
            "title": "Include Images",
            "description": "Include image analysis in search results",
            "default": false
          },
          "include_ocr_text": {
            "type": "boolean",
            "title": "Include Ocr Text",
            "description": "Include OCR-extracted text in search",
            "default": true
          },
          "content_types": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content Types",
            "description": "Filter by content types (text, image, mixed)"
          },
          "ocr_confidence_threshold": {
            "type": "number",
            "maximum": 1,
            "minimum": 0,
            "title": "Ocr Confidence Threshold",
            "description": "Minimum OCR confidence threshold",
            "default": 0.5
          },
          "date_from": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date From",
            "description": "Filter documents from date (ISO format)"
          },
          "date_to": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date To",
            "description": "Filter documents to date (ISO format)"
          }
        },
        "type": "object",
        "required": [
          "query"
        ],
        "title": "SearchRequest",
        "description": "Request model for document search."
      },
      "app__schemas__search__SearchResponse": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success",
            "description": "Indicates if the request was successful",
            "default": true
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message",
            "description": "Optional message or description"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Response timestamp"
          },
          "query": {
            "type": "string",
            "title": "Query",
            "description": "Original search query"
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/SearchResult"
            },
            "type": "array",
            "title": "Results",
            "description": "Search results"
          },
          "total_found": {
            "type": "integer",
            "title": "Total Found",
            "description": "Total number of matching results"
          },
          "search_time_ms": {
            "type": "number",
            "title": "Search Time Ms",
            "description": "Search execution time in milliseconds"
          },
          "search_type": {
            "type": "string",
            "title": "Search Type",
            "description": "Type of search performed"
          },
          "filters_applied": {
            "type": "object",
            "title": "Filters Applied",
            "description": "Applied filters"
          }
        },
        "type": "object",
        "required": [
          "query",
          "results",
          "total_found",
          "search_time_ms",
          "search_type"
        ],
        "title": "SearchResponse",
        "description": "Response model for search operations."
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT Bearer token authentication. All endpoints require a valid JWT token."
      }
    }
  },
  "tags": [
    {
      "name": "PDF Processing",
      "description": "Advanced PDF text, table, and image extraction using PyMuPDF4LLM"
    },
    {
      "name": "RAG",
      "description": "Retrieval-Augmented Generation system with LlamaIndex integration"
    },
    {
      "name": "AI Analysis",
      "description": "LLaMA Vision models for semantic material analysis"
    },
    {
      "name": "Search",
      "description": "Semantic, vector, and hybrid search capabilities"
    },
    {
      "name": "Embeddings",
      "description": "Text embedding generation with standardized models (text-embedding-ada-002)"
    },
    {
      "name": "Chat",
      "description": "AI chat completions and contextual responses"
    },
    {
      "name": "Health & Monitoring",
      "description": "Service health checks, metrics, and performance monitoring"
    },
    {
      "name": "Legacy APIs",
      "description": "Backward-compatible endpoints for existing integrations"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ]
}