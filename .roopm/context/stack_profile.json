{
  "project_info": {
    "name": "Material Kai Vision Platform",
    "type": "web_application",
    "description": "AI-powered material analysis and vision platform with ML services",
    "primary_languages": ["TypeScript", "JavaScript", "Python"],
    "frameworks": ["React", "Node.js", "Supabase", "Vite"]
  },
  "technology_stack": {
    "frontend": {
      "framework": "React",
      "language": "TypeScript",
      "build_tool": "Vite",
      "ui_library": "Shadcn UI",
      "styling": "Tailwind CSS",
      "state_management": "React Context"
    },
    "backend": {
      "runtime": "Node.js",
      "language": "TypeScript",
      "database": "Supabase (PostgreSQL)",
      "auth": "Supabase Auth",
      "api_style": "REST"
    },
    "ml_services": {
      "languages": ["Python", "TypeScript"],
      "frameworks": ["Custom ML Pipeline"],
      "services": ["Material Analysis", "OCR", "3D Processing"]
    },
    "infrastructure": {
      "hosting": "Supabase",
      "deployment": "Edge Functions",
      "storage": "Supabase Storage"
    }
  },
  "coding_standards": {
    "typescript": {
      "style": "strict",
      "naming_convention": "camelCase",
      "interface_prefix": false,
      "explicit_return_types": true,
      "no_any": true
    },
    "react": {
      "component_style": "functional_components",
      "hooks_usage": "preferred",
      "prop_types": "typescript_interfaces",
      "file_naming": "PascalCase"
    },
    "general": {
      "max_line_length": 100,
      "indentation": "2_spaces",
      "semicolons": true,
      "trailing_commas": true,
      "quote_style": "single"
    }
  },
  "project_patterns": {
    "file_organization": {
      "components": "src/components/[Feature]/ComponentName.tsx",
      "services": "src/services/[domain]/serviceName.ts",
      "types": "src/types/[domain].ts",
      "utils": "src/utils/[category].ts"
    },
    "naming_conventions": {
      "components": "PascalCase",
      "files": "camelCase",
      "directories": "kebab-case",
      "constants": "UPPER_SNAKE_CASE"
    },
    "architecture_patterns": {
      "service_layer": "Clean separation between UI and business logic",
      "error_handling": "Centralized error handling with custom error classes",
      "state_management": "Context for global state, local state for components"
    }
  },
  "quality_requirements": {
    "testing": {
      "unit_tests": "required_for_services",
      "integration_tests": "required_for_api",
      "e2e_tests": "required_for_critical_flows"
    },
    "documentation": {
      "inline_comments": "for_complex_logic",
      "function_docs": "for_public_apis",
      "readme_updates": "for_new_features"
    },
    "performance": {
      "bundle_size": "monitor_and_optimize",
      "loading_times": "under_3_seconds",
      "memory_usage": "efficient_cleanup"
    }
  },
  "preferred_modes": {
    "react_development": "dev-react",
    "typescript_work": "util-typescript", 
    "architecture_decisions": "core-architect",
    "ml_services": "dev-python",
    "database_work": "baas-supabase",
    "ui_design": "design-shadcn"
  }
}